// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// SignalsAPIEscalationPolicyStepEntityDistributionType - The distribution type for the step
type SignalsAPIEscalationPolicyStepEntityDistributionType string

const (
	SignalsAPIEscalationPolicyStepEntityDistributionTypeUnspecified                  SignalsAPIEscalationPolicyStepEntityDistributionType = "unspecified"
	SignalsAPIEscalationPolicyStepEntityDistributionTypeRoundRobinByAlert            SignalsAPIEscalationPolicyStepEntityDistributionType = "round_robin_by_alert"
	SignalsAPIEscalationPolicyStepEntityDistributionTypeRoundRobinByEscalationPolicy SignalsAPIEscalationPolicyStepEntityDistributionType = "round_robin_by_escalation_policy"
)

func (e SignalsAPIEscalationPolicyStepEntityDistributionType) ToPointer() *SignalsAPIEscalationPolicyStepEntityDistributionType {
	return &e
}
func (e *SignalsAPIEscalationPolicyStepEntityDistributionType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unspecified":
		fallthrough
	case "round_robin_by_alert":
		fallthrough
	case "round_robin_by_escalation_policy":
		*e = SignalsAPIEscalationPolicyStepEntityDistributionType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SignalsAPIEscalationPolicyStepEntityDistributionType: %v", v)
	}
}

type SignalsAPIEscalationPolicyStepEntity struct {
	ID             *string                  `json:"id,omitempty"`
	Position       *int                     `json:"position,omitempty"`
	ParentPosition *int                     `json:"parent_position,omitempty"`
	Targets        []SignalsAPITargetEntity `json:"targets,omitempty"`
	Timeout        *string                  `json:"timeout,omitempty"`
	// The distribution type for the step
	DistributionType        *SignalsAPIEscalationPolicyStepEntityDistributionType `json:"distribution_type,omitempty"`
	NextTargetForRoundRobin *NullableSignalsAPITargetEntity                       `json:"next_target_for_round_robin,omitempty"`
	// The notification priorities that this step is assigned to. Valid values are HIGH, MEDIUM, and LOW.
	Priorities []string `json:"priorities,omitempty"`
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetPosition() *int {
	if o == nil {
		return nil
	}
	return o.Position
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetParentPosition() *int {
	if o == nil {
		return nil
	}
	return o.ParentPosition
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetTargets() []SignalsAPITargetEntity {
	if o == nil {
		return nil
	}
	return o.Targets
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetTimeout() *string {
	if o == nil {
		return nil
	}
	return o.Timeout
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetDistributionType() *SignalsAPIEscalationPolicyStepEntityDistributionType {
	if o == nil {
		return nil
	}
	return o.DistributionType
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetNextTargetForRoundRobin() *NullableSignalsAPITargetEntity {
	if o == nil {
		return nil
	}
	return o.NextTargetForRoundRobin
}

func (o *SignalsAPIEscalationPolicyStepEntity) GetPriorities() []string {
	if o == nil {
		return nil
	}
	return o.Priorities
}
