// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// NullableAlertsAlertEntityLabels - Arbitrary key:value pairs of labels.
type NullableAlertsAlertEntityLabels struct {
}

// NullableAlertsAlertEntity - Alerts_AlertEntity model
type NullableAlertsAlertEntity struct {
	ID              *string    `json:"id,omitempty"`
	Summary         *string    `json:"summary,omitempty"`
	Description     *string    `json:"description,omitempty"`
	Priority        *string    `json:"priority,omitempty"`
	IntegrationName *string    `json:"integration_name,omitempty"`
	StartsAt        *time.Time `json:"starts_at,omitempty"`
	EndsAt          *time.Time `json:"ends_at,omitempty"`
	DurationMs      *int       `json:"duration_ms,omitempty"`
	DurationIso8601 *string    `json:"duration_iso8601,omitempty"`
	Status          *string    `json:"status,omitempty"`
	RemoteID        *string    `json:"remote_id,omitempty"`
	RemoteURL       *string    `json:"remote_url,omitempty"`
	// Arbitrary key:value pairs of labels.
	Labels        *NullableAlertsAlertEntityLabels     `json:"labels,omitempty"`
	Environments  []SuccinctEntity                     `json:"environments,omitempty"`
	Services      []SuccinctEntity                     `json:"services,omitempty"`
	Tags          []string                             `json:"tags,omitempty"`
	SourceIcon    *string                              `json:"source_icon,omitempty"`
	SignalID      *string                              `json:"signal_id,omitempty"`
	SignalRule    *NullableSignalsAPIRuleEntity        `json:"signal_rule,omitempty"`
	SignalTarget  *NullableSignalsAPITargetEntity      `json:"signal_target,omitempty"`
	TeamName      *string                              `json:"team_name,omitempty"`
	TeamID        *string                              `json:"team_id,omitempty"`
	Position      *int                                 `json:"position,omitempty"`
	Incidents     []PublicAPIV1IncidentsSuccinctEntity `json:"incidents,omitempty"`
	Events        []AlertsSirenEventEntity             `json:"events,omitempty"`
	IsExpired     *bool                                `json:"is_expired,omitempty"`
	IsNoise       *bool                                `json:"is_noise,omitempty"`
	ParentAlerts  []AlertsSirenAlertEntity             `json:"parent_alerts,omitempty"`
	ChildAlerts   []AlertsSirenAlertEntity             `json:"child_alerts,omitempty"`
	Conversations []ConversationsAPIEntitiesReference  `json:"conversations,omitempty"`
}

func (n NullableAlertsAlertEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(n, "", false)
}

func (n *NullableAlertsAlertEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &n, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (n *NullableAlertsAlertEntity) GetID() *string {
	if n == nil {
		return nil
	}
	return n.ID
}

func (n *NullableAlertsAlertEntity) GetSummary() *string {
	if n == nil {
		return nil
	}
	return n.Summary
}

func (n *NullableAlertsAlertEntity) GetDescription() *string {
	if n == nil {
		return nil
	}
	return n.Description
}

func (n *NullableAlertsAlertEntity) GetPriority() *string {
	if n == nil {
		return nil
	}
	return n.Priority
}

func (n *NullableAlertsAlertEntity) GetIntegrationName() *string {
	if n == nil {
		return nil
	}
	return n.IntegrationName
}

func (n *NullableAlertsAlertEntity) GetStartsAt() *time.Time {
	if n == nil {
		return nil
	}
	return n.StartsAt
}

func (n *NullableAlertsAlertEntity) GetEndsAt() *time.Time {
	if n == nil {
		return nil
	}
	return n.EndsAt
}

func (n *NullableAlertsAlertEntity) GetDurationMs() *int {
	if n == nil {
		return nil
	}
	return n.DurationMs
}

func (n *NullableAlertsAlertEntity) GetDurationIso8601() *string {
	if n == nil {
		return nil
	}
	return n.DurationIso8601
}

func (n *NullableAlertsAlertEntity) GetStatus() *string {
	if n == nil {
		return nil
	}
	return n.Status
}

func (n *NullableAlertsAlertEntity) GetRemoteID() *string {
	if n == nil {
		return nil
	}
	return n.RemoteID
}

func (n *NullableAlertsAlertEntity) GetRemoteURL() *string {
	if n == nil {
		return nil
	}
	return n.RemoteURL
}

func (n *NullableAlertsAlertEntity) GetLabels() *NullableAlertsAlertEntityLabels {
	if n == nil {
		return nil
	}
	return n.Labels
}

func (n *NullableAlertsAlertEntity) GetEnvironments() []SuccinctEntity {
	if n == nil {
		return nil
	}
	return n.Environments
}

func (n *NullableAlertsAlertEntity) GetServices() []SuccinctEntity {
	if n == nil {
		return nil
	}
	return n.Services
}

func (n *NullableAlertsAlertEntity) GetTags() []string {
	if n == nil {
		return nil
	}
	return n.Tags
}

func (n *NullableAlertsAlertEntity) GetSourceIcon() *string {
	if n == nil {
		return nil
	}
	return n.SourceIcon
}

func (n *NullableAlertsAlertEntity) GetSignalID() *string {
	if n == nil {
		return nil
	}
	return n.SignalID
}

func (n *NullableAlertsAlertEntity) GetSignalRule() *NullableSignalsAPIRuleEntity {
	if n == nil {
		return nil
	}
	return n.SignalRule
}

func (n *NullableAlertsAlertEntity) GetSignalTarget() *NullableSignalsAPITargetEntity {
	if n == nil {
		return nil
	}
	return n.SignalTarget
}

func (n *NullableAlertsAlertEntity) GetTeamName() *string {
	if n == nil {
		return nil
	}
	return n.TeamName
}

func (n *NullableAlertsAlertEntity) GetTeamID() *string {
	if n == nil {
		return nil
	}
	return n.TeamID
}

func (n *NullableAlertsAlertEntity) GetPosition() *int {
	if n == nil {
		return nil
	}
	return n.Position
}

func (n *NullableAlertsAlertEntity) GetIncidents() []PublicAPIV1IncidentsSuccinctEntity {
	if n == nil {
		return nil
	}
	return n.Incidents
}

func (n *NullableAlertsAlertEntity) GetEvents() []AlertsSirenEventEntity {
	if n == nil {
		return nil
	}
	return n.Events
}

func (n *NullableAlertsAlertEntity) GetIsExpired() *bool {
	if n == nil {
		return nil
	}
	return n.IsExpired
}

func (n *NullableAlertsAlertEntity) GetIsNoise() *bool {
	if n == nil {
		return nil
	}
	return n.IsNoise
}

func (n *NullableAlertsAlertEntity) GetParentAlerts() []AlertsSirenAlertEntity {
	if n == nil {
		return nil
	}
	return n.ParentAlerts
}

func (n *NullableAlertsAlertEntity) GetChildAlerts() []AlertsSirenAlertEntity {
	if n == nil {
		return nil
	}
	return n.ChildAlerts
}

func (n *NullableAlertsAlertEntity) GetConversations() []ConversationsAPIEntitiesReference {
	if n == nil {
		return nil
	}
	return n.Conversations
}
