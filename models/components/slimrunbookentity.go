// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type SlimRunbookEntity struct {
	ID             *string                  `json:"id,omitempty"`
	Name           *string                  `json:"name,omitempty"`
	Summary        *string                  `json:"summary,omitempty"`
	Description    *string                  `json:"description,omitempty"`
	Type           *string                  `json:"type,omitempty"`
	CreatedAt      *time.Time               `json:"created_at,omitempty"`
	UpdatedAt      *time.Time               `json:"updated_at,omitempty"`
	AttachmentRule *NullableRulesRuleEntity `json:"attachment_rule,omitempty"`
	Owner          *NullableTeamEntityLite  `json:"owner,omitempty"`
	// categories the runbook applies to
	Categories []string `json:"categories,omitempty"`
	// The timestamp when this runbook was last executed
	LastExecutedAt          *time.Time                                  `json:"last_executed_at,omitempty"`
	LastExecutedForIncident *NullablePublicAPIV1IncidentsSuccinctEntity `json:"last_executed_for_incident,omitempty"`
}

func (s SlimRunbookEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SlimRunbookEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *SlimRunbookEntity) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *SlimRunbookEntity) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *SlimRunbookEntity) GetSummary() *string {
	if s == nil {
		return nil
	}
	return s.Summary
}

func (s *SlimRunbookEntity) GetDescription() *string {
	if s == nil {
		return nil
	}
	return s.Description
}

func (s *SlimRunbookEntity) GetType() *string {
	if s == nil {
		return nil
	}
	return s.Type
}

func (s *SlimRunbookEntity) GetCreatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.CreatedAt
}

func (s *SlimRunbookEntity) GetUpdatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.UpdatedAt
}

func (s *SlimRunbookEntity) GetAttachmentRule() *NullableRulesRuleEntity {
	if s == nil {
		return nil
	}
	return s.AttachmentRule
}

func (s *SlimRunbookEntity) GetOwner() *NullableTeamEntityLite {
	if s == nil {
		return nil
	}
	return s.Owner
}

func (s *SlimRunbookEntity) GetCategories() []string {
	if s == nil {
		return nil
	}
	return s.Categories
}

func (s *SlimRunbookEntity) GetLastExecutedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.LastExecutedAt
}

func (s *SlimRunbookEntity) GetLastExecutedForIncident() *NullablePublicAPIV1IncidentsSuccinctEntity {
	if s == nil {
		return nil
	}
	return s.LastExecutedForIncident
}
