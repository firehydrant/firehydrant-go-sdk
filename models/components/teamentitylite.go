// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type TeamEntityLite struct {
	ID                                *string               `json:"id,omitempty"`
	Name                              *string               `json:"name,omitempty"`
	Description                       *string               `json:"description,omitempty"`
	Slug                              *string               `json:"slug,omitempty"`
	CreatedAt                         *time.Time            `json:"created_at,omitempty"`
	UpdatedAt                         *time.Time            `json:"updated_at,omitempty"`
	SignalsIcalURL                    *string               `json:"signals_ical_url,omitempty"`
	CreatedBy                         *NullableAuthorEntity `json:"created_by,omitempty"`
	InSupportHours                    *bool                 `json:"in_support_hours,omitempty"`
	RestrictSignalsResourceManagement *bool                 `json:"restrict_signals_resource_management,omitempty"`
}

func (t TeamEntityLite) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TeamEntityLite) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TeamEntityLite) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *TeamEntityLite) GetName() *string {
	if t == nil {
		return nil
	}
	return t.Name
}

func (t *TeamEntityLite) GetDescription() *string {
	if t == nil {
		return nil
	}
	return t.Description
}

func (t *TeamEntityLite) GetSlug() *string {
	if t == nil {
		return nil
	}
	return t.Slug
}

func (t *TeamEntityLite) GetCreatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.CreatedAt
}

func (t *TeamEntityLite) GetUpdatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.UpdatedAt
}

func (t *TeamEntityLite) GetSignalsIcalURL() *string {
	if t == nil {
		return nil
	}
	return t.SignalsIcalURL
}

func (t *TeamEntityLite) GetCreatedBy() *NullableAuthorEntity {
	if t == nil {
		return nil
	}
	return t.CreatedBy
}

func (t *TeamEntityLite) GetInSupportHours() *bool {
	if t == nil {
		return nil
	}
	return t.InSupportHours
}

func (t *TeamEntityLite) GetRestrictSignalsResourceManagement() *bool {
	if t == nil {
		return nil
	}
	return t.RestrictSignalsResourceManagement
}
