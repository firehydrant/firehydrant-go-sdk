// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type IncidentAttachmentEntityStatus string

const (
	IncidentAttachmentEntityStatusPendingUpload IncidentAttachmentEntityStatus = "pending_upload"
	IncidentAttachmentEntityStatusUploaded      IncidentAttachmentEntityStatus = "uploaded"
)

func (e IncidentAttachmentEntityStatus) ToPointer() *IncidentAttachmentEntityStatus {
	return &e
}
func (e *IncidentAttachmentEntityStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pending_upload":
		fallthrough
	case "uploaded":
		*e = IncidentAttachmentEntityStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncidentAttachmentEntityStatus: %v", v)
	}
}

// Versions - An object with keys that designate a specific version or size of the attachment
type Versions struct {
}

// IncidentAttachmentEntity model
type IncidentAttachmentEntity struct {
	FileName        *string                         `json:"file_name,omitempty"`
	FileContentType *string                         `json:"file_content_type,omitempty"`
	SignedURL       *string                         `json:"signed_url,omitempty"`
	MediaType       *string                         `json:"media_type,omitempty"`
	Description     *string                         `json:"description,omitempty"`
	ExternalID      *string                         `json:"external_id,omitempty"`
	FileSize        *int                            `json:"file_size,omitempty"`
	Status          *IncidentAttachmentEntityStatus `json:"status,omitempty"`
	// An object with keys that designate a specific version or size of the attachment
	Versions *Versions `json:"versions,omitempty"`
}

func (i *IncidentAttachmentEntity) GetFileName() *string {
	if i == nil {
		return nil
	}
	return i.FileName
}

func (i *IncidentAttachmentEntity) GetFileContentType() *string {
	if i == nil {
		return nil
	}
	return i.FileContentType
}

func (i *IncidentAttachmentEntity) GetSignedURL() *string {
	if i == nil {
		return nil
	}
	return i.SignedURL
}

func (i *IncidentAttachmentEntity) GetMediaType() *string {
	if i == nil {
		return nil
	}
	return i.MediaType
}

func (i *IncidentAttachmentEntity) GetDescription() *string {
	if i == nil {
		return nil
	}
	return i.Description
}

func (i *IncidentAttachmentEntity) GetExternalID() *string {
	if i == nil {
		return nil
	}
	return i.ExternalID
}

func (i *IncidentAttachmentEntity) GetFileSize() *int {
	if i == nil {
		return nil
	}
	return i.FileSize
}

func (i *IncidentAttachmentEntity) GetStatus() *IncidentAttachmentEntityStatus {
	if i == nil {
		return nil
	}
	return i.Status
}

func (i *IncidentAttachmentEntity) GetVersions() *Versions {
	if i == nil {
		return nil
	}
	return i.Versions
}
