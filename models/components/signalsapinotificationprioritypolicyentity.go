// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type SignalsAPINotificationPriorityPolicyEntity struct {
	// The notification priority this policy handles (HIGH, MEDIUM, or LOW)
	NotificationPriority *string `json:"notification_priority,omitempty"`
	// Number of repetitions for this priority
	Repetitions *int                                                 `json:"repetitions,omitempty"`
	HandoffStep *NullableSignalsAPIEscalationPolicyHandoffStepEntity `json:"handoff_step,omitempty"`
	// Steps for this priority
	Steps []SignalsAPIEscalationPolicyStepEntity `json:"steps,omitempty"`
}

func (s *SignalsAPINotificationPriorityPolicyEntity) GetNotificationPriority() *string {
	if s == nil {
		return nil
	}
	return s.NotificationPriority
}

func (s *SignalsAPINotificationPriorityPolicyEntity) GetRepetitions() *int {
	if s == nil {
		return nil
	}
	return s.Repetitions
}

func (s *SignalsAPINotificationPriorityPolicyEntity) GetHandoffStep() *NullableSignalsAPIEscalationPolicyHandoffStepEntity {
	if s == nil {
		return nil
	}
	return s.HandoffStep
}

func (s *SignalsAPINotificationPriorityPolicyEntity) GetSteps() []SignalsAPIEscalationPolicyStepEntity {
	if s == nil {
		return nil
	}
	return s.Steps
}
