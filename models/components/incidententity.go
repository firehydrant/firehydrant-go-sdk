// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// IncidentEntityLabels - A key/value of labels
type IncidentEntityLabels struct {
}

type IncidentEntityRetroExport struct {
}

// IncidentEntity model
type IncidentEntity struct {
	// UUID of the Incident
	ID *string `json:"id,omitempty"`
	// Name of the incident
	Name *string `json:"name,omitempty"`
	// The time the incident was opened
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// The time the incident started
	StartedAt *time.Time `json:"started_at,omitempty"`
	// The time the incident was archived
	DiscardedAt           *time.Time `json:"discarded_at,omitempty"`
	Summary               *string    `json:"summary,omitempty"`
	CustomerImpactSummary *string    `json:"customer_impact_summary,omitempty"`
	Description           *string    `json:"description,omitempty"`
	// The type/slug of the current milestone. Will be one of the currently configured milestones for the given incident.
	CurrentMilestone *string `json:"current_milestone,omitempty"`
	// Incident number
	Number                  *int                                   `json:"number,omitempty"`
	Priority                *string                                `json:"priority,omitempty"`
	Severity                *string                                `json:"severity,omitempty"`
	SeverityColor           *string                                `json:"severity_color,omitempty"`
	SeverityImpact          *string                                `json:"severity_impact,omitempty"`
	SeverityCondition       *string                                `json:"severity_condition,omitempty"`
	TagList                 []string                               `json:"tag_list,omitempty"`
	IncidentType            *NullableSuccinctEntity                `json:"incident_type,omitempty"`
	SeverityImpactObject    *NullableSeverityMatrixImpactEntity    `json:"severity_impact_object,omitempty"`
	SeverityConditionObject *NullableSeverityMatrixConditionEntity `json:"severity_condition_object,omitempty"`
	PrivateID               *string                                `json:"private_id,omitempty"`
	OrganizationID          *string                                `json:"organization_id,omitempty"`
	// DEPRECATED: Please use lifecycle phases instead
	Milestones            []IncidentsMilestoneEntity            `json:"milestones,omitempty"`
	LifecyclePhases       []IncidentsLifecyclePhaseEntity       `json:"lifecycle_phases,omitempty"`
	LifecycleMeasurements []IncidentsLifecycleMeasurementEntity `json:"lifecycle_measurements,omitempty"`
	Active                *bool                                 `json:"active,omitempty"`
	// A key/value of labels
	Labels               *IncidentEntityLabels           `json:"labels,omitempty"`
	RoleAssignments      []IncidentsRoleAssignmentEntity `json:"role_assignments,omitempty"`
	StatusPages          []IncidentsStatusPageEntity     `json:"status_pages,omitempty"`
	IncidentURL          *string                         `json:"incident_url,omitempty"`
	PrivateStatusPageURL *string                         `json:"private_status_page_url,omitempty"`
	Organization         *NullableOrganizationEntity     `json:"organization,omitempty"`
	CustomersImpacted    *int                            `json:"customers_impacted,omitempty"`
	MonetaryImpact       *int                            `json:"monetary_impact,omitempty"`
	MonetaryImpactCents  *int                            `json:"monetary_impact_cents,omitempty"`
	LastUpdate           *string                         `json:"last_update,omitempty"`
	LastNote             *NullableEventNoteEntity        `json:"last_note,omitempty"`
	ReportID             *string                         `json:"report_id,omitempty"`
	AiIncidentSummary    *string                         `json:"ai_incident_summary,omitempty"`
	Services             []SuccinctEntity                `json:"services,omitempty"`
	Environments         []SuccinctEntity                `json:"environments,omitempty"`
	Functionalities      []SuccinctEntity                `json:"functionalities,omitempty"`
	ChannelName          *string                         `json:"channel_name,omitempty"`
	ChannelReference     *string                         `json:"channel_reference,omitempty"`
	ChannelID            *string                         `json:"channel_id,omitempty"`
	// inoperative: 0, operational: 1, archived: 2
	ChannelStatus     *string                           `json:"channel_status,omitempty"`
	IncidentTickets   []TicketingTicketEntity           `json:"incident_tickets,omitempty"`
	Ticket            *NullableTicketingTicketEntity    `json:"ticket,omitempty"`
	Impacts           []IncidentsImpactEntity           `json:"impacts,omitempty"`
	ConferenceBridges []IncidentsConferenceBridgeEntity `json:"conference_bridges,omitempty"`
	IncidentChannels  []IncidentsChannelEntity          `json:"incident_channels,omitempty"`
	// A list of objects attached to this item. Can be one of: LinkEntity, CustomerSupportIssueEntity, or GenericAttachmentEntity
	RetroExports      []IncidentEntityRetroExport            `json:"retro_exports,omitempty"`
	CreatedBy         *NullableAuthorEntity                  `json:"created_by,omitempty"`
	ContextObject     *NullableIncidentsContextObjectEntity  `json:"context_object,omitempty"`
	TeamAssignments   []IncidentsTeamAssignmentEntityLite    `json:"team_assignments,omitempty"`
	Conversations     []ConversationsAPIEntitiesReference    `json:"conversations,omitempty"`
	CustomFields      []CustomFieldsFieldValue               `json:"custom_fields,omitempty"`
	FieldRequirements []IncidentEntityFieldRequirementEntity `json:"field_requirements,omitempty"`
}

func (i IncidentEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IncidentEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (i *IncidentEntity) GetID() *string {
	if i == nil {
		return nil
	}
	return i.ID
}

func (i *IncidentEntity) GetName() *string {
	if i == nil {
		return nil
	}
	return i.Name
}

func (i *IncidentEntity) GetCreatedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.CreatedAt
}

func (i *IncidentEntity) GetStartedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.StartedAt
}

func (i *IncidentEntity) GetDiscardedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.DiscardedAt
}

func (i *IncidentEntity) GetSummary() *string {
	if i == nil {
		return nil
	}
	return i.Summary
}

func (i *IncidentEntity) GetCustomerImpactSummary() *string {
	if i == nil {
		return nil
	}
	return i.CustomerImpactSummary
}

func (i *IncidentEntity) GetDescription() *string {
	if i == nil {
		return nil
	}
	return i.Description
}

func (i *IncidentEntity) GetCurrentMilestone() *string {
	if i == nil {
		return nil
	}
	return i.CurrentMilestone
}

func (i *IncidentEntity) GetNumber() *int {
	if i == nil {
		return nil
	}
	return i.Number
}

func (i *IncidentEntity) GetPriority() *string {
	if i == nil {
		return nil
	}
	return i.Priority
}

func (i *IncidentEntity) GetSeverity() *string {
	if i == nil {
		return nil
	}
	return i.Severity
}

func (i *IncidentEntity) GetSeverityColor() *string {
	if i == nil {
		return nil
	}
	return i.SeverityColor
}

func (i *IncidentEntity) GetSeverityImpact() *string {
	if i == nil {
		return nil
	}
	return i.SeverityImpact
}

func (i *IncidentEntity) GetSeverityCondition() *string {
	if i == nil {
		return nil
	}
	return i.SeverityCondition
}

func (i *IncidentEntity) GetTagList() []string {
	if i == nil {
		return nil
	}
	return i.TagList
}

func (i *IncidentEntity) GetIncidentType() *NullableSuccinctEntity {
	if i == nil {
		return nil
	}
	return i.IncidentType
}

func (i *IncidentEntity) GetSeverityImpactObject() *NullableSeverityMatrixImpactEntity {
	if i == nil {
		return nil
	}
	return i.SeverityImpactObject
}

func (i *IncidentEntity) GetSeverityConditionObject() *NullableSeverityMatrixConditionEntity {
	if i == nil {
		return nil
	}
	return i.SeverityConditionObject
}

func (i *IncidentEntity) GetPrivateID() *string {
	if i == nil {
		return nil
	}
	return i.PrivateID
}

func (i *IncidentEntity) GetOrganizationID() *string {
	if i == nil {
		return nil
	}
	return i.OrganizationID
}

func (i *IncidentEntity) GetMilestones() []IncidentsMilestoneEntity {
	if i == nil {
		return nil
	}
	return i.Milestones
}

func (i *IncidentEntity) GetLifecyclePhases() []IncidentsLifecyclePhaseEntity {
	if i == nil {
		return nil
	}
	return i.LifecyclePhases
}

func (i *IncidentEntity) GetLifecycleMeasurements() []IncidentsLifecycleMeasurementEntity {
	if i == nil {
		return nil
	}
	return i.LifecycleMeasurements
}

func (i *IncidentEntity) GetActive() *bool {
	if i == nil {
		return nil
	}
	return i.Active
}

func (i *IncidentEntity) GetLabels() *IncidentEntityLabels {
	if i == nil {
		return nil
	}
	return i.Labels
}

func (i *IncidentEntity) GetRoleAssignments() []IncidentsRoleAssignmentEntity {
	if i == nil {
		return nil
	}
	return i.RoleAssignments
}

func (i *IncidentEntity) GetStatusPages() []IncidentsStatusPageEntity {
	if i == nil {
		return nil
	}
	return i.StatusPages
}

func (i *IncidentEntity) GetIncidentURL() *string {
	if i == nil {
		return nil
	}
	return i.IncidentURL
}

func (i *IncidentEntity) GetPrivateStatusPageURL() *string {
	if i == nil {
		return nil
	}
	return i.PrivateStatusPageURL
}

func (i *IncidentEntity) GetOrganization() *NullableOrganizationEntity {
	if i == nil {
		return nil
	}
	return i.Organization
}

func (i *IncidentEntity) GetCustomersImpacted() *int {
	if i == nil {
		return nil
	}
	return i.CustomersImpacted
}

func (i *IncidentEntity) GetMonetaryImpact() *int {
	if i == nil {
		return nil
	}
	return i.MonetaryImpact
}

func (i *IncidentEntity) GetMonetaryImpactCents() *int {
	if i == nil {
		return nil
	}
	return i.MonetaryImpactCents
}

func (i *IncidentEntity) GetLastUpdate() *string {
	if i == nil {
		return nil
	}
	return i.LastUpdate
}

func (i *IncidentEntity) GetLastNote() *NullableEventNoteEntity {
	if i == nil {
		return nil
	}
	return i.LastNote
}

func (i *IncidentEntity) GetReportID() *string {
	if i == nil {
		return nil
	}
	return i.ReportID
}

func (i *IncidentEntity) GetAiIncidentSummary() *string {
	if i == nil {
		return nil
	}
	return i.AiIncidentSummary
}

func (i *IncidentEntity) GetServices() []SuccinctEntity {
	if i == nil {
		return nil
	}
	return i.Services
}

func (i *IncidentEntity) GetEnvironments() []SuccinctEntity {
	if i == nil {
		return nil
	}
	return i.Environments
}

func (i *IncidentEntity) GetFunctionalities() []SuccinctEntity {
	if i == nil {
		return nil
	}
	return i.Functionalities
}

func (i *IncidentEntity) GetChannelName() *string {
	if i == nil {
		return nil
	}
	return i.ChannelName
}

func (i *IncidentEntity) GetChannelReference() *string {
	if i == nil {
		return nil
	}
	return i.ChannelReference
}

func (i *IncidentEntity) GetChannelID() *string {
	if i == nil {
		return nil
	}
	return i.ChannelID
}

func (i *IncidentEntity) GetChannelStatus() *string {
	if i == nil {
		return nil
	}
	return i.ChannelStatus
}

func (i *IncidentEntity) GetIncidentTickets() []TicketingTicketEntity {
	if i == nil {
		return nil
	}
	return i.IncidentTickets
}

func (i *IncidentEntity) GetTicket() *NullableTicketingTicketEntity {
	if i == nil {
		return nil
	}
	return i.Ticket
}

func (i *IncidentEntity) GetImpacts() []IncidentsImpactEntity {
	if i == nil {
		return nil
	}
	return i.Impacts
}

func (i *IncidentEntity) GetConferenceBridges() []IncidentsConferenceBridgeEntity {
	if i == nil {
		return nil
	}
	return i.ConferenceBridges
}

func (i *IncidentEntity) GetIncidentChannels() []IncidentsChannelEntity {
	if i == nil {
		return nil
	}
	return i.IncidentChannels
}

func (i *IncidentEntity) GetRetroExports() []IncidentEntityRetroExport {
	if i == nil {
		return nil
	}
	return i.RetroExports
}

func (i *IncidentEntity) GetCreatedBy() *NullableAuthorEntity {
	if i == nil {
		return nil
	}
	return i.CreatedBy
}

func (i *IncidentEntity) GetContextObject() *NullableIncidentsContextObjectEntity {
	if i == nil {
		return nil
	}
	return i.ContextObject
}

func (i *IncidentEntity) GetTeamAssignments() []IncidentsTeamAssignmentEntityLite {
	if i == nil {
		return nil
	}
	return i.TeamAssignments
}

func (i *IncidentEntity) GetConversations() []ConversationsAPIEntitiesReference {
	if i == nil {
		return nil
	}
	return i.Conversations
}

func (i *IncidentEntity) GetCustomFields() []CustomFieldsFieldValue {
	if i == nil {
		return nil
	}
	return i.CustomFields
}

func (i *IncidentEntity) GetFieldRequirements() []IncidentEntityFieldRequirementEntity {
	if i == nil {
		return nil
	}
	return i.FieldRequirements
}
