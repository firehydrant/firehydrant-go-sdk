// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// PublicAPIV1RoleEntity - PublicAPI_V1_RoleEntity model
type PublicAPIV1RoleEntity struct {
	ID          *string                       `json:"id,omitempty"`
	Name        *string                       `json:"name,omitempty"`
	Slug        *string                       `json:"slug,omitempty"`
	Description *string                       `json:"description,omitempty"`
	CreatedAt   *time.Time                    `json:"created_at,omitempty"`
	UpdatedAt   *time.Time                    `json:"updated_at,omitempty"`
	BuiltIn     *bool                         `json:"built_in,omitempty"`
	ReadOnly    *bool                         `json:"read_only,omitempty"`
	Permissions []PublicAPIV1PermissionEntity `json:"permissions,omitempty"`
}

func (p PublicAPIV1RoleEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PublicAPIV1RoleEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (p *PublicAPIV1RoleEntity) GetID() *string {
	if p == nil {
		return nil
	}
	return p.ID
}

func (p *PublicAPIV1RoleEntity) GetName() *string {
	if p == nil {
		return nil
	}
	return p.Name
}

func (p *PublicAPIV1RoleEntity) GetSlug() *string {
	if p == nil {
		return nil
	}
	return p.Slug
}

func (p *PublicAPIV1RoleEntity) GetDescription() *string {
	if p == nil {
		return nil
	}
	return p.Description
}

func (p *PublicAPIV1RoleEntity) GetCreatedAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.CreatedAt
}

func (p *PublicAPIV1RoleEntity) GetUpdatedAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.UpdatedAt
}

func (p *PublicAPIV1RoleEntity) GetBuiltIn() *bool {
	if p == nil {
		return nil
	}
	return p.BuiltIn
}

func (p *PublicAPIV1RoleEntity) GetReadOnly() *bool {
	if p == nil {
		return nil
	}
	return p.ReadOnly
}

func (p *PublicAPIV1RoleEntity) GetPermissions() []PublicAPIV1PermissionEntity {
	if p == nil {
		return nil
	}
	return p.Permissions
}
