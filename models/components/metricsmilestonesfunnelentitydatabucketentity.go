// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type MetricsMilestonesFunnelEntityDataBucketEntity struct {
	// The start datetime for the period
	TimeBucket      *time.Time                                                         `json:"time_bucket,omitempty"`
	FilterParams    *NullableMetricsMilestonesFunnelEntityDataBucketFilterParamsEntity `json:"filter_params,omitempty"`
	MilestoneCounts []MetricsMilestonesFunnelEntityDataBucketMilestoneCountEntity      `json:"milestone_counts,omitempty"`
}

func (m MetricsMilestonesFunnelEntityDataBucketEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MetricsMilestonesFunnelEntityDataBucketEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (m *MetricsMilestonesFunnelEntityDataBucketEntity) GetTimeBucket() *time.Time {
	if m == nil {
		return nil
	}
	return m.TimeBucket
}

func (m *MetricsMilestonesFunnelEntityDataBucketEntity) GetFilterParams() *NullableMetricsMilestonesFunnelEntityDataBucketFilterParamsEntity {
	if m == nil {
		return nil
	}
	return m.FilterParams
}

func (m *MetricsMilestonesFunnelEntityDataBucketEntity) GetMilestoneCounts() []MetricsMilestonesFunnelEntityDataBucketMilestoneCountEntity {
	if m == nil {
		return nil
	}
	return m.MilestoneCounts
}
