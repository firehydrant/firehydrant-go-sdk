// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CreateRolePermission string

const (
	CreateRolePermissionCreateAlerts                           CreateRolePermission = "create_alerts"
	CreateRolePermissionRespondToAlerts                        CreateRolePermission = "respond_to_alerts"
	CreateRolePermissionReadAlerts                             CreateRolePermission = "read_alerts"
	CreateRolePermissionManageAlertGrouping                    CreateRolePermission = "manage_alert_grouping"
	CreateRolePermissionReadAlertGrouping                      CreateRolePermission = "read_alert_grouping"
	CreateRolePermissionManageAlertRules                       CreateRolePermission = "manage_alert_rules"
	CreateRolePermissionReadAlertRules                         CreateRolePermission = "read_alert_rules"
	CreateRolePermissionManageCallRoutes                       CreateRolePermission = "manage_call_routes"
	CreateRolePermissionReadCallRoutes                         CreateRolePermission = "read_call_routes"
	CreateRolePermissionManageEscalationPolicies               CreateRolePermission = "manage_escalation_policies"
	CreateRolePermissionReadEscalationPolicies                 CreateRolePermission = "read_escalation_policies"
	CreateRolePermissionManageEventSources                     CreateRolePermission = "manage_event_sources"
	CreateRolePermissionReadEventSources                       CreateRolePermission = "read_event_sources"
	CreateRolePermissionManageOnCallSchedules                  CreateRolePermission = "manage_on_call_schedules"
	CreateRolePermissionReadOnCallSchedules                    CreateRolePermission = "read_on_call_schedules"
	CreateRolePermissionManageOnCallShifts                     CreateRolePermission = "manage_on_call_shifts"
	CreateRolePermissionClaimOnCallShifts                      CreateRolePermission = "claim_on_call_shifts"
	CreateRolePermissionManageOrganizationNotificationPolicies CreateRolePermission = "manage_organization_notification_policies"
	CreateRolePermissionReadNotificationPolicyCompliance       CreateRolePermission = "read_notification_policy_compliance"
	CreateRolePermissionManageWebhookTargets                   CreateRolePermission = "manage_webhook_targets"
	CreateRolePermissionReadWebhookTargets                     CreateRolePermission = "read_webhook_targets"
	CreateRolePermissionReadAnalytics                          CreateRolePermission = "read_analytics"
	CreateRolePermissionManageAPIKeys                          CreateRolePermission = "manage_api_keys"
	CreateRolePermissionReadAPIKeys                            CreateRolePermission = "read_api_keys"
	CreateRolePermissionManageAudiences                        CreateRolePermission = "manage_audiences"
	CreateRolePermissionReadAudiences                          CreateRolePermission = "read_audiences"
	CreateRolePermissionReadAuditEvents                        CreateRolePermission = "read_audit_events"
	CreateRolePermissionManageChangeEvents                     CreateRolePermission = "manage_change_events"
	CreateRolePermissionReadChangeEvents                       CreateRolePermission = "read_change_events"
	CreateRolePermissionManageIncidents                        CreateRolePermission = "manage_incidents"
	CreateRolePermissionCreateIncidents                        CreateRolePermission = "create_incidents"
	CreateRolePermissionReadIncidents                          CreateRolePermission = "read_incidents"
	CreateRolePermissionManageIncidentSettings                 CreateRolePermission = "manage_incident_settings"
	CreateRolePermissionReadIncidentSettings                   CreateRolePermission = "read_incident_settings"
	CreateRolePermissionManageIntegrations                     CreateRolePermission = "manage_integrations"
	CreateRolePermissionReadIntegrations                       CreateRolePermission = "read_integrations"
	CreateRolePermissionManagePrivateIncidents                 CreateRolePermission = "manage_private_incidents"
	CreateRolePermissionManageOrganizationSecrets              CreateRolePermission = "manage_organization_secrets"
	CreateRolePermissionReadOrganizationSecrets                CreateRolePermission = "read_organization_secrets"
	CreateRolePermissionManageOrganizationSettings             CreateRolePermission = "manage_organization_settings"
	CreateRolePermissionReadOrganizationSettings               CreateRolePermission = "read_organization_settings"
	CreateRolePermissionManageRoles                            CreateRolePermission = "manage_roles"
	CreateRolePermissionReadRoles                              CreateRolePermission = "read_roles"
	CreateRolePermissionManageRunbooks                         CreateRolePermission = "manage_runbooks"
	CreateRolePermissionReadRunbooks                           CreateRolePermission = "read_runbooks"
	CreateRolePermissionManageServiceCatalog                   CreateRolePermission = "manage_service_catalog"
	CreateRolePermissionReadServiceCatalog                     CreateRolePermission = "read_service_catalog"
	CreateRolePermissionManageStatusTemplates                  CreateRolePermission = "manage_status_templates"
	CreateRolePermissionReadStatusTemplates                    CreateRolePermission = "read_status_templates"
	CreateRolePermissionManageStatusPageUpdates                CreateRolePermission = "manage_status_page_updates"
	CreateRolePermissionManageSupportHours                     CreateRolePermission = "manage_support_hours"
	CreateRolePermissionReadSupportHours                       CreateRolePermission = "read_support_hours"
	CreateRolePermissionManageTeams                            CreateRolePermission = "manage_teams"
	CreateRolePermissionReadTeams                              CreateRolePermission = "read_teams"
	CreateRolePermissionManageUsers                            CreateRolePermission = "manage_users"
	CreateRolePermissionReadUsers                              CreateRolePermission = "read_users"
	CreateRolePermissionManageWebhooks                         CreateRolePermission = "manage_webhooks"
	CreateRolePermissionReadWebhooks                           CreateRolePermission = "read_webhooks"
)

func (e CreateRolePermission) ToPointer() *CreateRolePermission {
	return &e
}
func (e *CreateRolePermission) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "create_alerts":
		fallthrough
	case "respond_to_alerts":
		fallthrough
	case "read_alerts":
		fallthrough
	case "manage_alert_grouping":
		fallthrough
	case "read_alert_grouping":
		fallthrough
	case "manage_alert_rules":
		fallthrough
	case "read_alert_rules":
		fallthrough
	case "manage_call_routes":
		fallthrough
	case "read_call_routes":
		fallthrough
	case "manage_escalation_policies":
		fallthrough
	case "read_escalation_policies":
		fallthrough
	case "manage_event_sources":
		fallthrough
	case "read_event_sources":
		fallthrough
	case "manage_on_call_schedules":
		fallthrough
	case "read_on_call_schedules":
		fallthrough
	case "manage_on_call_shifts":
		fallthrough
	case "claim_on_call_shifts":
		fallthrough
	case "manage_organization_notification_policies":
		fallthrough
	case "read_notification_policy_compliance":
		fallthrough
	case "manage_webhook_targets":
		fallthrough
	case "read_webhook_targets":
		fallthrough
	case "read_analytics":
		fallthrough
	case "manage_api_keys":
		fallthrough
	case "read_api_keys":
		fallthrough
	case "manage_audiences":
		fallthrough
	case "read_audiences":
		fallthrough
	case "read_audit_events":
		fallthrough
	case "manage_change_events":
		fallthrough
	case "read_change_events":
		fallthrough
	case "manage_incidents":
		fallthrough
	case "create_incidents":
		fallthrough
	case "read_incidents":
		fallthrough
	case "manage_incident_settings":
		fallthrough
	case "read_incident_settings":
		fallthrough
	case "manage_integrations":
		fallthrough
	case "read_integrations":
		fallthrough
	case "manage_private_incidents":
		fallthrough
	case "manage_organization_secrets":
		fallthrough
	case "read_organization_secrets":
		fallthrough
	case "manage_organization_settings":
		fallthrough
	case "read_organization_settings":
		fallthrough
	case "manage_roles":
		fallthrough
	case "read_roles":
		fallthrough
	case "manage_runbooks":
		fallthrough
	case "read_runbooks":
		fallthrough
	case "manage_service_catalog":
		fallthrough
	case "read_service_catalog":
		fallthrough
	case "manage_status_templates":
		fallthrough
	case "read_status_templates":
		fallthrough
	case "manage_status_page_updates":
		fallthrough
	case "manage_support_hours":
		fallthrough
	case "read_support_hours":
		fallthrough
	case "manage_teams":
		fallthrough
	case "read_teams":
		fallthrough
	case "manage_users":
		fallthrough
	case "read_users":
		fallthrough
	case "manage_webhooks":
		fallthrough
	case "read_webhooks":
		*e = CreateRolePermission(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRolePermission: %v", v)
	}
}

// CreateRole - Create a new role
type CreateRole struct {
	// The name of the role.
	Name string `json:"name"`
	// A unique identifier for the role. If not provided, one will be generated from the name.
	Slug *string `json:"slug,omitempty"`
	// A long-form description of the role's purpose.
	Description *string `json:"description,omitempty"`
	// An array of permission slugs to assign to the role.
	Permissions []CreateRolePermission `json:"permissions,omitempty"`
}

func (c *CreateRole) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CreateRole) GetSlug() *string {
	if c == nil {
		return nil
	}
	return c.Slug
}

func (c *CreateRole) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CreateRole) GetPermissions() []CreateRolePermission {
	if c == nil {
		return nil
	}
	return c.Permissions
}
