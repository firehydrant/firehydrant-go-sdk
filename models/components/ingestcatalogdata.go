// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// Encoding for submitted data
type Encoding string

const (
	EncodingTextYaml         Encoding = "text/yaml"
	EncodingApplicationXYaml Encoding = "application/x-yaml"
	EncodingApplicationJSON  Encoding = "application/json"
)

func (e Encoding) ToPointer() *Encoding {
	return &e
}
func (e *Encoding) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text/yaml":
		fallthrough
	case "application/x-yaml":
		fallthrough
	case "application/json":
		*e = Encoding(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Encoding: %v", v)
	}
}

// IngestCatalogData - Accepts catalog data in the configured format and asyncronously processes the data to incorporate changes into service catalog.
type IngestCatalogData struct {
	// Encoding for submitted data
	Encoding Encoding `json:"encoding"`
	// Service data
	Data string `json:"data"`
}

func (i *IngestCatalogData) GetEncoding() Encoding {
	if i == nil {
		return Encoding("")
	}
	return i.Encoding
}

func (i *IngestCatalogData) GetData() string {
	if i == nil {
		return ""
	}
	return i.Data
}
