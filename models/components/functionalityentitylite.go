// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type FunctionalityEntityLite struct {
	ID          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Slug        *string    `json:"slug,omitempty"`
	Description *string    `json:"description,omitempty"`
	CreatedAt   *time.Time `json:"created_at,omitempty"`
	UpdatedAt   *time.Time `json:"updated_at,omitempty"`
	// An object of label key and values
	Labels map[string]any `json:"labels,omitempty"`
	// List of active incident guids
	ActiveIncidents []string `json:"active_incidents,omitempty"`
	// List of links attached to this functionality.
	Links                 []LinksEntity           `json:"links,omitempty"`
	Owner                 *NullableTeamEntityLite `json:"owner,omitempty"`
	AlertOnAdd            *bool                   `json:"alert_on_add,omitempty"`
	AutoAddRespondingTeam *bool                   `json:"auto_add_responding_team,omitempty"`
	UpdatedBy             *NullableAuthorEntity   `json:"updated_by,omitempty"`
}

func (f FunctionalityEntityLite) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FunctionalityEntityLite) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (f *FunctionalityEntityLite) GetID() *string {
	if f == nil {
		return nil
	}
	return f.ID
}

func (f *FunctionalityEntityLite) GetName() *string {
	if f == nil {
		return nil
	}
	return f.Name
}

func (f *FunctionalityEntityLite) GetSlug() *string {
	if f == nil {
		return nil
	}
	return f.Slug
}

func (f *FunctionalityEntityLite) GetDescription() *string {
	if f == nil {
		return nil
	}
	return f.Description
}

func (f *FunctionalityEntityLite) GetCreatedAt() *time.Time {
	if f == nil {
		return nil
	}
	return f.CreatedAt
}

func (f *FunctionalityEntityLite) GetUpdatedAt() *time.Time {
	if f == nil {
		return nil
	}
	return f.UpdatedAt
}

func (f *FunctionalityEntityLite) GetLabels() map[string]any {
	if f == nil {
		return nil
	}
	return f.Labels
}

func (f *FunctionalityEntityLite) GetActiveIncidents() []string {
	if f == nil {
		return nil
	}
	return f.ActiveIncidents
}

func (f *FunctionalityEntityLite) GetLinks() []LinksEntity {
	if f == nil {
		return nil
	}
	return f.Links
}

func (f *FunctionalityEntityLite) GetOwner() *NullableTeamEntityLite {
	if f == nil {
		return nil
	}
	return f.Owner
}

func (f *FunctionalityEntityLite) GetAlertOnAdd() *bool {
	if f == nil {
		return nil
	}
	return f.AlertOnAdd
}

func (f *FunctionalityEntityLite) GetAutoAddRespondingTeam() *bool {
	if f == nil {
		return nil
	}
	return f.AutoAddRespondingTeam
}

func (f *FunctionalityEntityLite) GetUpdatedBy() *NullableAuthorEntity {
	if f == nil {
		return nil
	}
	return f.UpdatedBy
}
