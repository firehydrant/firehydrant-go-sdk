// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CreateSeverityColor string

const (
	CreateSeverityColorRed    CreateSeverityColor = "red"
	CreateSeverityColorOrange CreateSeverityColor = "orange"
	CreateSeverityColorYellow CreateSeverityColor = "yellow"
	CreateSeverityColorBlue   CreateSeverityColor = "blue"
	CreateSeverityColorTeal   CreateSeverityColor = "teal"
	CreateSeverityColorGrey   CreateSeverityColor = "grey"
	CreateSeverityColorGreen  CreateSeverityColor = "green"
)

func (e CreateSeverityColor) ToPointer() *CreateSeverityColor {
	return &e
}
func (e *CreateSeverityColor) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "red":
		fallthrough
	case "orange":
		fallthrough
	case "yellow":
		fallthrough
	case "blue":
		fallthrough
	case "teal":
		fallthrough
	case "grey":
		fallthrough
	case "green":
		*e = CreateSeverityColor(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateSeverityColor: %v", v)
	}
}

// CreateSeverity - Create a new severity
type CreateSeverity struct {
	Slug        string               `json:"slug"`
	Description *string              `json:"description,omitempty"`
	Position    *int                 `json:"position,omitempty"`
	Color       *CreateSeverityColor `json:"color,omitempty"`
}

func (c *CreateSeverity) GetSlug() string {
	if c == nil {
		return ""
	}
	return c.Slug
}

func (c *CreateSeverity) GetDescription() *string {
	if c == nil {
		return nil
	}
	return c.Description
}

func (c *CreateSeverity) GetPosition() *int {
	if c == nil {
		return nil
	}
	return c.Position
}

func (c *CreateSeverity) GetColor() *CreateSeverityColor {
	if c == nil {
		return nil
	}
	return c.Color
}
