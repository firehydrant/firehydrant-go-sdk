// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type IncidentTypeEntityTemplateImpactEntityType string

const (
	IncidentTypeEntityTemplateImpactEntityTypeCustomer      IncidentTypeEntityTemplateImpactEntityType = "customer"
	IncidentTypeEntityTemplateImpactEntityTypeEnvironment   IncidentTypeEntityTemplateImpactEntityType = "environment"
	IncidentTypeEntityTemplateImpactEntityTypeFunctionality IncidentTypeEntityTemplateImpactEntityType = "functionality"
	IncidentTypeEntityTemplateImpactEntityTypeService       IncidentTypeEntityTemplateImpactEntityType = "service"
)

func (e IncidentTypeEntityTemplateImpactEntityType) ToPointer() *IncidentTypeEntityTemplateImpactEntityType {
	return &e
}
func (e *IncidentTypeEntityTemplateImpactEntityType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "customer":
		fallthrough
	case "environment":
		fallthrough
	case "functionality":
		fallthrough
	case "service":
		*e = IncidentTypeEntityTemplateImpactEntityType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IncidentTypeEntityTemplateImpactEntityType: %v", v)
	}
}

type IncidentTypeEntityTemplateImpactEntity struct {
	ID            *string                                     `json:"id,omitempty"`
	Name          *string                                     `json:"name,omitempty"`
	ConditionID   *string                                     `json:"condition_id,omitempty"`
	ConditionName *string                                     `json:"condition_name,omitempty"`
	Type          *IncidentTypeEntityTemplateImpactEntityType `json:"type,omitempty"`
}

func (i *IncidentTypeEntityTemplateImpactEntity) GetID() *string {
	if i == nil {
		return nil
	}
	return i.ID
}

func (i *IncidentTypeEntityTemplateImpactEntity) GetName() *string {
	if i == nil {
		return nil
	}
	return i.Name
}

func (i *IncidentTypeEntityTemplateImpactEntity) GetConditionID() *string {
	if i == nil {
		return nil
	}
	return i.ConditionID
}

func (i *IncidentTypeEntityTemplateImpactEntity) GetConditionName() *string {
	if i == nil {
		return nil
	}
	return i.ConditionName
}

func (i *IncidentTypeEntityTemplateImpactEntity) GetType() *IncidentTypeEntityTemplateImpactEntityType {
	if i == nil {
		return nil
	}
	return i.Type
}
