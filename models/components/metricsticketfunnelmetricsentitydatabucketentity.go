// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type MetricsTicketFunnelMetricsEntityDataBucketEntity struct {
	// The start datetime for the period
	TimeBucket   *time.Time                                                            `json:"time_bucket,omitempty"`
	FilterParams *NullableMetricsTicketFunnelMetricsEntityDataBucketFilterParamsEntity `json:"filter_params,omitempty"`
	// The number of tasks created
	TasksCreated *int `json:"tasks_created,omitempty"`
	// The number of tasks completed
	TasksDone *int `json:"tasks_done,omitempty"`
	// The number of follow ups created
	FollowUpsCreated *int `json:"follow_ups_created,omitempty"`
	// The number of follow ups completed
	FollowUpsDone *int `json:"follow_ups_done,omitempty"`
}

func (m MetricsTicketFunnelMetricsEntityDataBucketEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) GetTimeBucket() *time.Time {
	if m == nil {
		return nil
	}
	return m.TimeBucket
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) GetFilterParams() *NullableMetricsTicketFunnelMetricsEntityDataBucketFilterParamsEntity {
	if m == nil {
		return nil
	}
	return m.FilterParams
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) GetTasksCreated() *int {
	if m == nil {
		return nil
	}
	return m.TasksCreated
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) GetTasksDone() *int {
	if m == nil {
		return nil
	}
	return m.TasksDone
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) GetFollowUpsCreated() *int {
	if m == nil {
		return nil
	}
	return m.FollowUpsCreated
}

func (m *MetricsTicketFunnelMetricsEntityDataBucketEntity) GetFollowUpsDone() *int {
	if m == nil {
		return nil
	}
	return m.FollowUpsDone
}
