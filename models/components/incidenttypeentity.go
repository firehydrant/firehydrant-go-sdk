// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// IncidentTypeEntity model
type IncidentTypeEntity struct {
	ID             *string                                         `json:"id,omitempty"`
	Name           *string                                         `json:"name,omitempty"`
	Description    *string                                         `json:"description,omitempty"`
	Template       *NullableIncidentTypeEntityTemplateEntity       `json:"template,omitempty"`
	TemplateValues *NullableIncidentTypeEntityTemplateValuesEntity `json:"template_values,omitempty"`
	// A list of fields that are required on incidents of this type.
	RequiredFields []IncidentsRequiredFieldEntity `json:"required_fields,omitempty"`
	CreatedAt      *time.Time                     `json:"created_at,omitempty"`
	UpdatedAt      *time.Time                     `json:"updated_at,omitempty"`
}

func (i IncidentTypeEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IncidentTypeEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (i *IncidentTypeEntity) GetID() *string {
	if i == nil {
		return nil
	}
	return i.ID
}

func (i *IncidentTypeEntity) GetName() *string {
	if i == nil {
		return nil
	}
	return i.Name
}

func (i *IncidentTypeEntity) GetDescription() *string {
	if i == nil {
		return nil
	}
	return i.Description
}

func (i *IncidentTypeEntity) GetTemplate() *NullableIncidentTypeEntityTemplateEntity {
	if i == nil {
		return nil
	}
	return i.Template
}

func (i *IncidentTypeEntity) GetTemplateValues() *NullableIncidentTypeEntityTemplateValuesEntity {
	if i == nil {
		return nil
	}
	return i.TemplateValues
}

func (i *IncidentTypeEntity) GetRequiredFields() []IncidentsRequiredFieldEntity {
	if i == nil {
		return nil
	}
	return i.RequiredFields
}

func (i *IncidentTypeEntity) GetCreatedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.CreatedAt
}

func (i *IncidentTypeEntity) GetUpdatedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.UpdatedAt
}
