// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// TeamEntity model
type TeamEntity struct {
	ID                                *string                                            `json:"id,omitempty"`
	Name                              *string                                            `json:"name,omitempty"`
	Description                       *string                                            `json:"description,omitempty"`
	Slug                              *string                                            `json:"slug,omitempty"`
	CreatedAt                         *time.Time                                         `json:"created_at,omitempty"`
	UpdatedAt                         *time.Time                                         `json:"updated_at,omitempty"`
	SignalsIcalURL                    *string                                            `json:"signals_ical_url,omitempty"`
	CreatedBy                         *NullableAuthorEntity                              `json:"created_by,omitempty"`
	InSupportHours                    *bool                                              `json:"in_support_hours,omitempty"`
	RestrictSignalsResourceManagement *bool                                              `json:"restrict_signals_resource_management,omitempty"`
	SlackChannel                      *NullableIntegrationsSlackSlackChannelEntity       `json:"slack_channel,omitempty"`
	MsTeamsChannel                    *NullableIntegrationsMicrosoftTeamsV2ChannelEntity `json:"ms_teams_channel,omitempty"`
	Memberships                       []MembershipEntity                                 `json:"memberships,omitempty"`
	OwnedChecklistTemplates           []ChecklistTemplateEntity                          `json:"owned_checklist_templates,omitempty"`
	OwnedFunctionalities              []FunctionalityEntityLite                          `json:"owned_functionalities,omitempty"`
	OwnedServices                     []ServiceEntityLite                                `json:"owned_services,omitempty"`
	OwnedRunbooks                     []SlimRunbookEntity                                `json:"owned_runbooks,omitempty"`
	RespondingServices                []ServiceEntityLite                                `json:"responding_services,omitempty"`
	Services                          []ServiceEntityLite                                `json:"services,omitempty"`
	Functionalities                   []FunctionalityEntityLite                          `json:"functionalities,omitempty"`
	DefaultSignalsEscalationPolicy    *NullableSuccinctEntity                            `json:"default_signals_escalation_policy,omitempty"`
}

func (t TeamEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TeamEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (t *TeamEntity) GetID() *string {
	if t == nil {
		return nil
	}
	return t.ID
}

func (t *TeamEntity) GetName() *string {
	if t == nil {
		return nil
	}
	return t.Name
}

func (t *TeamEntity) GetDescription() *string {
	if t == nil {
		return nil
	}
	return t.Description
}

func (t *TeamEntity) GetSlug() *string {
	if t == nil {
		return nil
	}
	return t.Slug
}

func (t *TeamEntity) GetCreatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.CreatedAt
}

func (t *TeamEntity) GetUpdatedAt() *time.Time {
	if t == nil {
		return nil
	}
	return t.UpdatedAt
}

func (t *TeamEntity) GetSignalsIcalURL() *string {
	if t == nil {
		return nil
	}
	return t.SignalsIcalURL
}

func (t *TeamEntity) GetCreatedBy() *NullableAuthorEntity {
	if t == nil {
		return nil
	}
	return t.CreatedBy
}

func (t *TeamEntity) GetInSupportHours() *bool {
	if t == nil {
		return nil
	}
	return t.InSupportHours
}

func (t *TeamEntity) GetRestrictSignalsResourceManagement() *bool {
	if t == nil {
		return nil
	}
	return t.RestrictSignalsResourceManagement
}

func (t *TeamEntity) GetSlackChannel() *NullableIntegrationsSlackSlackChannelEntity {
	if t == nil {
		return nil
	}
	return t.SlackChannel
}

func (t *TeamEntity) GetMsTeamsChannel() *NullableIntegrationsMicrosoftTeamsV2ChannelEntity {
	if t == nil {
		return nil
	}
	return t.MsTeamsChannel
}

func (t *TeamEntity) GetMemberships() []MembershipEntity {
	if t == nil {
		return nil
	}
	return t.Memberships
}

func (t *TeamEntity) GetOwnedChecklistTemplates() []ChecklistTemplateEntity {
	if t == nil {
		return nil
	}
	return t.OwnedChecklistTemplates
}

func (t *TeamEntity) GetOwnedFunctionalities() []FunctionalityEntityLite {
	if t == nil {
		return nil
	}
	return t.OwnedFunctionalities
}

func (t *TeamEntity) GetOwnedServices() []ServiceEntityLite {
	if t == nil {
		return nil
	}
	return t.OwnedServices
}

func (t *TeamEntity) GetOwnedRunbooks() []SlimRunbookEntity {
	if t == nil {
		return nil
	}
	return t.OwnedRunbooks
}

func (t *TeamEntity) GetRespondingServices() []ServiceEntityLite {
	if t == nil {
		return nil
	}
	return t.RespondingServices
}

func (t *TeamEntity) GetServices() []ServiceEntityLite {
	if t == nil {
		return nil
	}
	return t.Services
}

func (t *TeamEntity) GetFunctionalities() []FunctionalityEntityLite {
	if t == nil {
		return nil
	}
	return t.Functionalities
}

func (t *TeamEntity) GetDefaultSignalsEscalationPolicy() *NullableSuccinctEntity {
	if t == nil {
		return nil
	}
	return t.DefaultSignalsEscalationPolicy
}
