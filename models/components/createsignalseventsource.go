// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// Headers - Hash of HTTP headers with values as Array, e.g. { 'Content-Type' => ['application/json'] }
type Headers struct {
}

// CreateSignalsEventSourceData - JSON body of request.
type CreateSignalsEventSourceData struct {
}

// CreateSignalsEventSourceExamplePayload - Example payload as input to transpose function
type CreateSignalsEventSourceExamplePayload struct {
	// Hash of HTTP headers with values as Array, e.g. { 'Content-Type' => ['application/json'] }
	Headers *Headers `json:"headers,omitempty"`
	// JSON body of request.
	Data *CreateSignalsEventSourceData `json:"data,omitempty"`
}

func (o *CreateSignalsEventSourceExamplePayload) GetHeaders() *Headers {
	if o == nil {
		return nil
	}
	return o.Headers
}

func (o *CreateSignalsEventSourceExamplePayload) GetData() *CreateSignalsEventSourceData {
	if o == nil {
		return nil
	}
	return o.Data
}

// CreateSignalsEventSource - Create a Signals event source for the authenticated user.
type CreateSignalsEventSource struct {
	// Name of the transposer
	Name string `json:"name"`
	// Description of the transposer
	Description *string `json:"description,omitempty"`
	// Slug of the transposer
	Slug string `json:"slug"`
	// Example payload as input to transpose function
	ExamplePayload CreateSignalsEventSourceExamplePayload `json:"example_payload"`
	// Javascript code to convert payload into Signal object
	Javascript string `json:"javascript"`
}

func (o *CreateSignalsEventSource) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateSignalsEventSource) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateSignalsEventSource) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *CreateSignalsEventSource) GetExamplePayload() CreateSignalsEventSourceExamplePayload {
	if o == nil {
		return CreateSignalsEventSourceExamplePayload{}
	}
	return o.ExamplePayload
}

func (o *CreateSignalsEventSource) GetJavascript() string {
	if o == nil {
		return ""
	}
	return o.Javascript
}
