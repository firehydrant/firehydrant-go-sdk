// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// AlertsSirenEventEntityData - The event's payload
type AlertsSirenEventEntityData struct {
}

type AlertsSirenEventEntity struct {
	ID   *string `json:"id,omitempty"`
	Type *string `json:"type,omitempty"`
	// The event's payload
	Data      *AlertsSirenEventEntityData `json:"data,omitempty"`
	CreatedAt *time.Time                  `json:"created_at,omitempty"`
}

func (a AlertsSirenEventEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AlertsSirenEventEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *AlertsSirenEventEntity) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AlertsSirenEventEntity) GetType() *string {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *AlertsSirenEventEntity) GetData() *AlertsSirenEventEntityData {
	if a == nil {
		return nil
	}
	return a.Data
}

func (a *AlertsSirenEventEntity) GetCreatedAt() *time.Time {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}
