// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type UpdateRolePermission string

const (
	UpdateRolePermissionCreateAlerts                           UpdateRolePermission = "create_alerts"
	UpdateRolePermissionRespondToAlerts                        UpdateRolePermission = "respond_to_alerts"
	UpdateRolePermissionReadAlerts                             UpdateRolePermission = "read_alerts"
	UpdateRolePermissionManageAlertGrouping                    UpdateRolePermission = "manage_alert_grouping"
	UpdateRolePermissionReadAlertGrouping                      UpdateRolePermission = "read_alert_grouping"
	UpdateRolePermissionManageAlertRules                       UpdateRolePermission = "manage_alert_rules"
	UpdateRolePermissionReadAlertRules                         UpdateRolePermission = "read_alert_rules"
	UpdateRolePermissionManageCallRoutes                       UpdateRolePermission = "manage_call_routes"
	UpdateRolePermissionReadCallRoutes                         UpdateRolePermission = "read_call_routes"
	UpdateRolePermissionManageEscalationPolicies               UpdateRolePermission = "manage_escalation_policies"
	UpdateRolePermissionReadEscalationPolicies                 UpdateRolePermission = "read_escalation_policies"
	UpdateRolePermissionManageEventSources                     UpdateRolePermission = "manage_event_sources"
	UpdateRolePermissionReadEventSources                       UpdateRolePermission = "read_event_sources"
	UpdateRolePermissionManageOnCallSchedules                  UpdateRolePermission = "manage_on_call_schedules"
	UpdateRolePermissionReadOnCallSchedules                    UpdateRolePermission = "read_on_call_schedules"
	UpdateRolePermissionManageOnCallShifts                     UpdateRolePermission = "manage_on_call_shifts"
	UpdateRolePermissionClaimOnCallShifts                      UpdateRolePermission = "claim_on_call_shifts"
	UpdateRolePermissionManageOrganizationNotificationPolicies UpdateRolePermission = "manage_organization_notification_policies"
	UpdateRolePermissionReadNotificationPolicyCompliance       UpdateRolePermission = "read_notification_policy_compliance"
	UpdateRolePermissionManageWebhookTargets                   UpdateRolePermission = "manage_webhook_targets"
	UpdateRolePermissionReadWebhookTargets                     UpdateRolePermission = "read_webhook_targets"
	UpdateRolePermissionReadAnalytics                          UpdateRolePermission = "read_analytics"
	UpdateRolePermissionManageAPIKeys                          UpdateRolePermission = "manage_api_keys"
	UpdateRolePermissionReadAPIKeys                            UpdateRolePermission = "read_api_keys"
	UpdateRolePermissionManageAudiences                        UpdateRolePermission = "manage_audiences"
	UpdateRolePermissionReadAudiences                          UpdateRolePermission = "read_audiences"
	UpdateRolePermissionReadAuditEvents                        UpdateRolePermission = "read_audit_events"
	UpdateRolePermissionManageChangeEvents                     UpdateRolePermission = "manage_change_events"
	UpdateRolePermissionReadChangeEvents                       UpdateRolePermission = "read_change_events"
	UpdateRolePermissionManageIncidents                        UpdateRolePermission = "manage_incidents"
	UpdateRolePermissionCreateIncidents                        UpdateRolePermission = "create_incidents"
	UpdateRolePermissionReadIncidents                          UpdateRolePermission = "read_incidents"
	UpdateRolePermissionManageIncidentSettings                 UpdateRolePermission = "manage_incident_settings"
	UpdateRolePermissionReadIncidentSettings                   UpdateRolePermission = "read_incident_settings"
	UpdateRolePermissionManageIntegrations                     UpdateRolePermission = "manage_integrations"
	UpdateRolePermissionReadIntegrations                       UpdateRolePermission = "read_integrations"
	UpdateRolePermissionManagePrivateIncidents                 UpdateRolePermission = "manage_private_incidents"
	UpdateRolePermissionManageOrganizationSecrets              UpdateRolePermission = "manage_organization_secrets"
	UpdateRolePermissionReadOrganizationSecrets                UpdateRolePermission = "read_organization_secrets"
	UpdateRolePermissionManageOrganizationSettings             UpdateRolePermission = "manage_organization_settings"
	UpdateRolePermissionReadOrganizationSettings               UpdateRolePermission = "read_organization_settings"
	UpdateRolePermissionManageRoles                            UpdateRolePermission = "manage_roles"
	UpdateRolePermissionReadRoles                              UpdateRolePermission = "read_roles"
	UpdateRolePermissionManageRunbooks                         UpdateRolePermission = "manage_runbooks"
	UpdateRolePermissionReadRunbooks                           UpdateRolePermission = "read_runbooks"
	UpdateRolePermissionManageServiceCatalog                   UpdateRolePermission = "manage_service_catalog"
	UpdateRolePermissionReadServiceCatalog                     UpdateRolePermission = "read_service_catalog"
	UpdateRolePermissionManageStatusTemplates                  UpdateRolePermission = "manage_status_templates"
	UpdateRolePermissionReadStatusTemplates                    UpdateRolePermission = "read_status_templates"
	UpdateRolePermissionManageStatusPageUpdates                UpdateRolePermission = "manage_status_page_updates"
	UpdateRolePermissionManageSupportHours                     UpdateRolePermission = "manage_support_hours"
	UpdateRolePermissionReadSupportHours                       UpdateRolePermission = "read_support_hours"
	UpdateRolePermissionManageTeams                            UpdateRolePermission = "manage_teams"
	UpdateRolePermissionReadTeams                              UpdateRolePermission = "read_teams"
	UpdateRolePermissionManageUsers                            UpdateRolePermission = "manage_users"
	UpdateRolePermissionReadUsers                              UpdateRolePermission = "read_users"
	UpdateRolePermissionManageWebhooks                         UpdateRolePermission = "manage_webhooks"
	UpdateRolePermissionReadWebhooks                           UpdateRolePermission = "read_webhooks"
)

func (e UpdateRolePermission) ToPointer() *UpdateRolePermission {
	return &e
}
func (e *UpdateRolePermission) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "create_alerts":
		fallthrough
	case "respond_to_alerts":
		fallthrough
	case "read_alerts":
		fallthrough
	case "manage_alert_grouping":
		fallthrough
	case "read_alert_grouping":
		fallthrough
	case "manage_alert_rules":
		fallthrough
	case "read_alert_rules":
		fallthrough
	case "manage_call_routes":
		fallthrough
	case "read_call_routes":
		fallthrough
	case "manage_escalation_policies":
		fallthrough
	case "read_escalation_policies":
		fallthrough
	case "manage_event_sources":
		fallthrough
	case "read_event_sources":
		fallthrough
	case "manage_on_call_schedules":
		fallthrough
	case "read_on_call_schedules":
		fallthrough
	case "manage_on_call_shifts":
		fallthrough
	case "claim_on_call_shifts":
		fallthrough
	case "manage_organization_notification_policies":
		fallthrough
	case "read_notification_policy_compliance":
		fallthrough
	case "manage_webhook_targets":
		fallthrough
	case "read_webhook_targets":
		fallthrough
	case "read_analytics":
		fallthrough
	case "manage_api_keys":
		fallthrough
	case "read_api_keys":
		fallthrough
	case "manage_audiences":
		fallthrough
	case "read_audiences":
		fallthrough
	case "read_audit_events":
		fallthrough
	case "manage_change_events":
		fallthrough
	case "read_change_events":
		fallthrough
	case "manage_incidents":
		fallthrough
	case "create_incidents":
		fallthrough
	case "read_incidents":
		fallthrough
	case "manage_incident_settings":
		fallthrough
	case "read_incident_settings":
		fallthrough
	case "manage_integrations":
		fallthrough
	case "read_integrations":
		fallthrough
	case "manage_private_incidents":
		fallthrough
	case "manage_organization_secrets":
		fallthrough
	case "read_organization_secrets":
		fallthrough
	case "manage_organization_settings":
		fallthrough
	case "read_organization_settings":
		fallthrough
	case "manage_roles":
		fallthrough
	case "read_roles":
		fallthrough
	case "manage_runbooks":
		fallthrough
	case "read_runbooks":
		fallthrough
	case "manage_service_catalog":
		fallthrough
	case "read_service_catalog":
		fallthrough
	case "manage_status_templates":
		fallthrough
	case "read_status_templates":
		fallthrough
	case "manage_status_page_updates":
		fallthrough
	case "manage_support_hours":
		fallthrough
	case "read_support_hours":
		fallthrough
	case "manage_teams":
		fallthrough
	case "read_teams":
		fallthrough
	case "manage_users":
		fallthrough
	case "read_users":
		fallthrough
	case "manage_webhooks":
		fallthrough
	case "read_webhooks":
		*e = UpdateRolePermission(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateRolePermission: %v", v)
	}
}

// UpdateRole - Update a role
type UpdateRole struct {
	// The name of the role.
	Name string `json:"name"`
	// A long-form description of the role's purpose.
	Description *string `json:"description,omitempty"`
	// An array of permission slugs to assign to the role.
	Permissions []UpdateRolePermission `json:"permissions,omitempty"`
}

func (o *UpdateRole) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *UpdateRole) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateRole) GetPermissions() []UpdateRolePermission {
	if o == nil {
		return nil
	}
	return o.Permissions
}
