// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// SignalsAPIOnCallRotationEntity - Signals_API_OnCallRotationEntity model
type SignalsAPIOnCallRotationEntity struct {
	ID                              *string                                 `json:"id,omitempty"`
	Name                            *string                                 `json:"name,omitempty"`
	Description                     *string                                 `json:"description,omitempty"`
	TimeZone                        *string                                 `json:"time_zone,omitempty"`
	Color                           *string                                 `json:"color,omitempty"`
	SlackUserGroupID                *string                                 `json:"slack_user_group_id,omitempty"`
	EnableSlackChannelNotifications *bool                                   `json:"enable_slack_channel_notifications,omitempty"`
	PreventShiftDeletion            *bool                                   `json:"prevent_shift_deletion,omitempty"`
	CoverageGapNotificationInterval *string                                 `json:"coverage_gap_notification_interval,omitempty"`
	Members                         []SuccinctEntity                        `json:"members,omitempty"`
	Shifts                          []SignalsAPIOnCallShiftEntity           `json:"shifts,omitempty"`
	Team                            *NullableSuccinctEntity                 `json:"team,omitempty"`
	Strategy                        *NullableSignalsAPIOnCallStrategyEntity `json:"strategy,omitempty"`
	Restrictions                    []SignalsAPIOnCallRestrictionEntity     `json:"restrictions,omitempty"`
	CreatedBy                       *NullableAuthorEntity                   `json:"created_by,omitempty"`
	CreatedAt                       *time.Time                              `json:"created_at,omitempty"`
	UpdatedAt                       *time.Time                              `json:"updated_at,omitempty"`
}

func (s SignalsAPIOnCallRotationEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SignalsAPIOnCallRotationEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *SignalsAPIOnCallRotationEntity) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *SignalsAPIOnCallRotationEntity) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *SignalsAPIOnCallRotationEntity) GetDescription() *string {
	if s == nil {
		return nil
	}
	return s.Description
}

func (s *SignalsAPIOnCallRotationEntity) GetTimeZone() *string {
	if s == nil {
		return nil
	}
	return s.TimeZone
}

func (s *SignalsAPIOnCallRotationEntity) GetColor() *string {
	if s == nil {
		return nil
	}
	return s.Color
}

func (s *SignalsAPIOnCallRotationEntity) GetSlackUserGroupID() *string {
	if s == nil {
		return nil
	}
	return s.SlackUserGroupID
}

func (s *SignalsAPIOnCallRotationEntity) GetEnableSlackChannelNotifications() *bool {
	if s == nil {
		return nil
	}
	return s.EnableSlackChannelNotifications
}

func (s *SignalsAPIOnCallRotationEntity) GetPreventShiftDeletion() *bool {
	if s == nil {
		return nil
	}
	return s.PreventShiftDeletion
}

func (s *SignalsAPIOnCallRotationEntity) GetCoverageGapNotificationInterval() *string {
	if s == nil {
		return nil
	}
	return s.CoverageGapNotificationInterval
}

func (s *SignalsAPIOnCallRotationEntity) GetMembers() []SuccinctEntity {
	if s == nil {
		return nil
	}
	return s.Members
}

func (s *SignalsAPIOnCallRotationEntity) GetShifts() []SignalsAPIOnCallShiftEntity {
	if s == nil {
		return nil
	}
	return s.Shifts
}

func (s *SignalsAPIOnCallRotationEntity) GetTeam() *NullableSuccinctEntity {
	if s == nil {
		return nil
	}
	return s.Team
}

func (s *SignalsAPIOnCallRotationEntity) GetStrategy() *NullableSignalsAPIOnCallStrategyEntity {
	if s == nil {
		return nil
	}
	return s.Strategy
}

func (s *SignalsAPIOnCallRotationEntity) GetRestrictions() []SignalsAPIOnCallRestrictionEntity {
	if s == nil {
		return nil
	}
	return s.Restrictions
}

func (s *SignalsAPIOnCallRotationEntity) GetCreatedBy() *NullableAuthorEntity {
	if s == nil {
		return nil
	}
	return s.CreatedBy
}

func (s *SignalsAPIOnCallRotationEntity) GetCreatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.CreatedAt
}

func (s *SignalsAPIOnCallRotationEntity) GetUpdatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.UpdatedAt
}
