// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type IncidentsMilestoneEntity struct {
	ID *string `json:"id,omitempty"`
	// The milestone's type. This will be one of the currently configured milestones for the given incident.
	Type *string `json:"type,omitempty"`
	// How long the incident spent in this milestones, in ISO 8601 Duration Format. This will be null if the milestone is the incident's current milestone.
	Duration   *string    `json:"duration,omitempty"`
	OccurredAt *time.Time `json:"occurred_at,omitempty"`
	CreatedAt  *time.Time `json:"created_at,omitempty"`
	UpdatedAt  *time.Time `json:"updated_at,omitempty"`
}

func (i IncidentsMilestoneEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IncidentsMilestoneEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (i *IncidentsMilestoneEntity) GetID() *string {
	if i == nil {
		return nil
	}
	return i.ID
}

func (i *IncidentsMilestoneEntity) GetType() *string {
	if i == nil {
		return nil
	}
	return i.Type
}

func (i *IncidentsMilestoneEntity) GetDuration() *string {
	if i == nil {
		return nil
	}
	return i.Duration
}

func (i *IncidentsMilestoneEntity) GetOccurredAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.OccurredAt
}

func (i *IncidentsMilestoneEntity) GetCreatedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.CreatedAt
}

func (i *IncidentsMilestoneEntity) GetUpdatedAt() *time.Time {
	if i == nil {
		return nil
	}
	return i.UpdatedAt
}
