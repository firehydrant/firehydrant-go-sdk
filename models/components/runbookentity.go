// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// RunbookEntity model
type RunbookEntity struct {
	ID                *string                   `json:"id,omitempty"`
	Name              *string                   `json:"name,omitempty"`
	Summary           *string                   `json:"summary,omitempty"`
	Description       *string                   `json:"description,omitempty"`
	Type              *string                   `json:"type,omitempty"`
	RunbookTemplateID *string                   `json:"runbook_template_id,omitempty"`
	CreatedAt         *time.Time                `json:"created_at,omitempty"`
	UpdatedAt         *time.Time                `json:"updated_at,omitempty"`
	CreatedBy         *NullableAuthorEntity     `json:"created_by,omitempty"`
	UpdatedBy         *NullableAuthorEntity     `json:"updated_by,omitempty"`
	Steps             []RunbookStepEntity       `json:"steps,omitempty"`
	AttachmentRule    *NullableRulesRuleEntity  `json:"attachment_rule,omitempty"`
	Votes             *NullableEmptyVotesEntity `json:"votes,omitempty"`
	IsEditable        *bool                     `json:"is_editable,omitempty"`
	Owner             *NullableTeamEntityLite   `json:"owner,omitempty"`
	// categories the runbook applies to
	Categories                      []string `json:"categories,omitempty"`
	AutoAttachToRestrictedIncidents *bool    `json:"auto_attach_to_restricted_incidents,omitempty"`
	Tutorial                        *bool    `json:"tutorial,omitempty"`
	// The timestamp when this runbook was last executed
	LastExecutedAt          *time.Time                                  `json:"last_executed_at,omitempty"`
	LastExecutedForIncident *NullablePublicAPIV1IncidentsSuccinctEntity `json:"last_executed_for_incident,omitempty"`
}

func (r RunbookEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(r, "", false)
}

func (r *RunbookEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &r, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (r *RunbookEntity) GetID() *string {
	if r == nil {
		return nil
	}
	return r.ID
}

func (r *RunbookEntity) GetName() *string {
	if r == nil {
		return nil
	}
	return r.Name
}

func (r *RunbookEntity) GetSummary() *string {
	if r == nil {
		return nil
	}
	return r.Summary
}

func (r *RunbookEntity) GetDescription() *string {
	if r == nil {
		return nil
	}
	return r.Description
}

func (r *RunbookEntity) GetType() *string {
	if r == nil {
		return nil
	}
	return r.Type
}

func (r *RunbookEntity) GetRunbookTemplateID() *string {
	if r == nil {
		return nil
	}
	return r.RunbookTemplateID
}

func (r *RunbookEntity) GetCreatedAt() *time.Time {
	if r == nil {
		return nil
	}
	return r.CreatedAt
}

func (r *RunbookEntity) GetUpdatedAt() *time.Time {
	if r == nil {
		return nil
	}
	return r.UpdatedAt
}

func (r *RunbookEntity) GetCreatedBy() *NullableAuthorEntity {
	if r == nil {
		return nil
	}
	return r.CreatedBy
}

func (r *RunbookEntity) GetUpdatedBy() *NullableAuthorEntity {
	if r == nil {
		return nil
	}
	return r.UpdatedBy
}

func (r *RunbookEntity) GetSteps() []RunbookStepEntity {
	if r == nil {
		return nil
	}
	return r.Steps
}

func (r *RunbookEntity) GetAttachmentRule() *NullableRulesRuleEntity {
	if r == nil {
		return nil
	}
	return r.AttachmentRule
}

func (r *RunbookEntity) GetVotes() *NullableEmptyVotesEntity {
	if r == nil {
		return nil
	}
	return r.Votes
}

func (r *RunbookEntity) GetIsEditable() *bool {
	if r == nil {
		return nil
	}
	return r.IsEditable
}

func (r *RunbookEntity) GetOwner() *NullableTeamEntityLite {
	if r == nil {
		return nil
	}
	return r.Owner
}

func (r *RunbookEntity) GetCategories() []string {
	if r == nil {
		return nil
	}
	return r.Categories
}

func (r *RunbookEntity) GetAutoAttachToRestrictedIncidents() *bool {
	if r == nil {
		return nil
	}
	return r.AutoAttachToRestrictedIncidents
}

func (r *RunbookEntity) GetTutorial() *bool {
	if r == nil {
		return nil
	}
	return r.Tutorial
}

func (r *RunbookEntity) GetLastExecutedAt() *time.Time {
	if r == nil {
		return nil
	}
	return r.LastExecutedAt
}

func (r *RunbookEntity) GetLastExecutedForIncident() *NullablePublicAPIV1IncidentsSuccinctEntity {
	if r == nil {
		return nil
	}
	return r.LastExecutedForIncident
}
