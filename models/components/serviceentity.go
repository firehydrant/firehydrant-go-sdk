// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

// ServiceEntityLabels - An object of label key and values
type ServiceEntityLabels struct {
}

// ServiceEntityManagedBySettings - Indicates the settings of the catalog that manages this service
type ServiceEntityManagedBySettings struct {
}

// ServiceEntity model
type ServiceEntity struct {
	ID            *string    `json:"id,omitempty"`
	Name          *string    `json:"name,omitempty"`
	Description   *string    `json:"description,omitempty"`
	Slug          *string    `json:"slug,omitempty"`
	ServiceTier   *int       `json:"service_tier,omitempty"`
	CreatedAt     *time.Time `json:"created_at,omitempty"`
	UpdatedAt     *time.Time `json:"updated_at,omitempty"`
	AllowedParams []string   `json:"allowed_params,omitempty"`
	// An object of label key and values
	Labels                *ServiceEntityLabels `json:"labels,omitempty"`
	AlertOnAdd            *bool                `json:"alert_on_add,omitempty"`
	AutoAddRespondingTeam *bool                `json:"auto_add_responding_team,omitempty"`
	// List of active incident guids
	ActiveIncidents []string `json:"active_incidents,omitempty"`
	// List of checklists associated with a service
	Checklists      []ChecklistTemplateEntity `json:"checklists,omitempty"`
	CompletedChecks *int                      `json:"completed_checks,omitempty"`
	// Information about known linkages to representations of services outside of FireHydrant.
	ExternalResources []ExternalResourceEntity `json:"external_resources,omitempty"`
	// List of functionalities attached to the service
	Functionalities []FunctionalityEntity                    `json:"functionalities,omitempty"`
	LastImport      *NullableImportsImportableResourceEntity `json:"last_import,omitempty"`
	// List of links attached to this service.
	Links []LinksEntity `json:"links,omitempty"`
	// If set, this field indicates that the service is managed by an integration and thus cannot be set manually
	ManagedBy *string `json:"managed_by,omitempty"`
	// Indicates the settings of the catalog that manages this service
	ManagedBySettings         *ServiceEntityManagedBySettings `json:"managed_by_settings,omitempty"`
	Owner                     *NullableTeamEntityLite         `json:"owner,omitempty"`
	ServiceChecklistUpdatedAt *time.Time                      `json:"service_checklist_updated_at,omitempty"`
	// List of teams attached to the service
	Teams     []TeamEntityLite      `json:"teams,omitempty"`
	UpdatedBy *NullableAuthorEntity `json:"updated_by,omitempty"`
}

func (s ServiceEntity) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *ServiceEntity) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (s *ServiceEntity) GetID() *string {
	if s == nil {
		return nil
	}
	return s.ID
}

func (s *ServiceEntity) GetName() *string {
	if s == nil {
		return nil
	}
	return s.Name
}

func (s *ServiceEntity) GetDescription() *string {
	if s == nil {
		return nil
	}
	return s.Description
}

func (s *ServiceEntity) GetSlug() *string {
	if s == nil {
		return nil
	}
	return s.Slug
}

func (s *ServiceEntity) GetServiceTier() *int {
	if s == nil {
		return nil
	}
	return s.ServiceTier
}

func (s *ServiceEntity) GetCreatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.CreatedAt
}

func (s *ServiceEntity) GetUpdatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.UpdatedAt
}

func (s *ServiceEntity) GetAllowedParams() []string {
	if s == nil {
		return nil
	}
	return s.AllowedParams
}

func (s *ServiceEntity) GetLabels() *ServiceEntityLabels {
	if s == nil {
		return nil
	}
	return s.Labels
}

func (s *ServiceEntity) GetAlertOnAdd() *bool {
	if s == nil {
		return nil
	}
	return s.AlertOnAdd
}

func (s *ServiceEntity) GetAutoAddRespondingTeam() *bool {
	if s == nil {
		return nil
	}
	return s.AutoAddRespondingTeam
}

func (s *ServiceEntity) GetActiveIncidents() []string {
	if s == nil {
		return nil
	}
	return s.ActiveIncidents
}

func (s *ServiceEntity) GetChecklists() []ChecklistTemplateEntity {
	if s == nil {
		return nil
	}
	return s.Checklists
}

func (s *ServiceEntity) GetCompletedChecks() *int {
	if s == nil {
		return nil
	}
	return s.CompletedChecks
}

func (s *ServiceEntity) GetExternalResources() []ExternalResourceEntity {
	if s == nil {
		return nil
	}
	return s.ExternalResources
}

func (s *ServiceEntity) GetFunctionalities() []FunctionalityEntity {
	if s == nil {
		return nil
	}
	return s.Functionalities
}

func (s *ServiceEntity) GetLastImport() *NullableImportsImportableResourceEntity {
	if s == nil {
		return nil
	}
	return s.LastImport
}

func (s *ServiceEntity) GetLinks() []LinksEntity {
	if s == nil {
		return nil
	}
	return s.Links
}

func (s *ServiceEntity) GetManagedBy() *string {
	if s == nil {
		return nil
	}
	return s.ManagedBy
}

func (s *ServiceEntity) GetManagedBySettings() *ServiceEntityManagedBySettings {
	if s == nil {
		return nil
	}
	return s.ManagedBySettings
}

func (s *ServiceEntity) GetOwner() *NullableTeamEntityLite {
	if s == nil {
		return nil
	}
	return s.Owner
}

func (s *ServiceEntity) GetServiceChecklistUpdatedAt() *time.Time {
	if s == nil {
		return nil
	}
	return s.ServiceChecklistUpdatedAt
}

func (s *ServiceEntity) GetTeams() []TeamEntityLite {
	if s == nil {
		return nil
	}
	return s.Teams
}

func (s *ServiceEntity) GetUpdatedBy() *NullableAuthorEntity {
	if s == nil {
		return nil
	}
	return s.UpdatedBy
}
