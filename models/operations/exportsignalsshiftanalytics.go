// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type ExportSignalsShiftAnalyticsRequestBody struct {
	// Array of user IDs to fetch oncall hours for
	UserIds []string `multipartForm:"name=user_ids"`
	// Array of team IDs to fetch oncall hours for
	TeamIds []string `multipartForm:"name=team_ids"`
}

func (e *ExportSignalsShiftAnalyticsRequestBody) GetUserIds() []string {
	if e == nil {
		return nil
	}
	return e.UserIds
}

func (e *ExportSignalsShiftAnalyticsRequestBody) GetTeamIds() []string {
	if e == nil {
		return nil
	}
	return e.TeamIds
}

type ExportSignalsShiftAnalyticsRequest struct {
	// Start of the period to fetch hours for (UTC)
	PeriodStart time.Time `queryParam:"style=form,explode=true,name=period_start"`
	// End of the period to fetch hours for (UTC)
	PeriodEnd   time.Time                               `queryParam:"style=form,explode=true,name=period_end"`
	RequestBody *ExportSignalsShiftAnalyticsRequestBody `request:"mediaType=multipart/form-data"`
}

func (e ExportSignalsShiftAnalyticsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *ExportSignalsShiftAnalyticsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"period_start", "period_end"}); err != nil {
		return err
	}
	return nil
}

func (e *ExportSignalsShiftAnalyticsRequest) GetPeriodStart() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.PeriodStart
}

func (e *ExportSignalsShiftAnalyticsRequest) GetPeriodEnd() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.PeriodEnd
}

func (e *ExportSignalsShiftAnalyticsRequest) GetRequestBody() *ExportSignalsShiftAnalyticsRequestBody {
	if e == nil {
		return nil
	}
	return e.RequestBody
}
