// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type UpdateLifecycleMilestoneRequestBody struct {
	// The name of the milestone
	Name *string `json:"name,omitempty"`
	// A long-form description of the milestone's purpose
	Description *string `json:"description,omitempty"`
	// A unique identifier for the milestone. If not provided, one will be generated from the name.
	Slug *string `json:"slug,omitempty"`
	// The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.
	Position *int `json:"position,omitempty"`
	// The ID of a later milestone that cannot be started until this milestone has a timestamp populated
	RequiredAtMilestoneID *string `json:"required_at_milestone_id,omitempty"`
}

func (o *UpdateLifecycleMilestoneRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateLifecycleMilestoneRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateLifecycleMilestoneRequestBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateLifecycleMilestoneRequestBody) GetPosition() *int {
	if o == nil {
		return nil
	}
	return o.Position
}

func (o *UpdateLifecycleMilestoneRequestBody) GetRequiredAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.RequiredAtMilestoneID
}

type UpdateLifecycleMilestoneRequest struct {
	MilestoneID string                               `pathParam:"style=simple,explode=false,name=milestone_id"`
	RequestBody *UpdateLifecycleMilestoneRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateLifecycleMilestoneRequest) GetMilestoneID() string {
	if o == nil {
		return ""
	}
	return o.MilestoneID
}

func (o *UpdateLifecycleMilestoneRequest) GetRequestBody() *UpdateLifecycleMilestoneRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateLifecycleMilestoneResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Update a milestone
	LifecyclesPhaseEntity *components.LifecyclesPhaseEntity
}

func (o *UpdateLifecycleMilestoneResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateLifecycleMilestoneResponse) GetLifecyclesPhaseEntity() *components.LifecyclesPhaseEntity {
	if o == nil {
		return nil
	}
	return o.LifecyclesPhaseEntity
}
