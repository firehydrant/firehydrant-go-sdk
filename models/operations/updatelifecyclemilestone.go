// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

// UpdateLifecycleMilestoneAutoAssignTimestampOnCreate - The setting for auto-assigning the milestone's timestamp during incident declaration
type UpdateLifecycleMilestoneAutoAssignTimestampOnCreate string

const (
	UpdateLifecycleMilestoneAutoAssignTimestampOnCreateAlwaysSetOnCreate     UpdateLifecycleMilestoneAutoAssignTimestampOnCreate = "always_set_on_create"
	UpdateLifecycleMilestoneAutoAssignTimestampOnCreateOnlySetOnManualCreate UpdateLifecycleMilestoneAutoAssignTimestampOnCreate = "only_set_on_manual_create"
	UpdateLifecycleMilestoneAutoAssignTimestampOnCreateNeverSetOnCreate      UpdateLifecycleMilestoneAutoAssignTimestampOnCreate = "never_set_on_create"
)

func (e UpdateLifecycleMilestoneAutoAssignTimestampOnCreate) ToPointer() *UpdateLifecycleMilestoneAutoAssignTimestampOnCreate {
	return &e
}
func (e *UpdateLifecycleMilestoneAutoAssignTimestampOnCreate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "always_set_on_create":
		fallthrough
	case "only_set_on_manual_create":
		fallthrough
	case "never_set_on_create":
		*e = UpdateLifecycleMilestoneAutoAssignTimestampOnCreate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UpdateLifecycleMilestoneAutoAssignTimestampOnCreate: %v", v)
	}
}

type UpdateLifecycleMilestoneRequestBody struct {
	// The name of the milestone
	Name *string `json:"name,omitempty"`
	// A long-form description of the milestone's purpose
	Description *string `json:"description,omitempty"`
	// A unique identifier for the milestone. If not provided, one will be generated from the name.
	Slug *string `json:"slug,omitempty"`
	// The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.
	Position *int `json:"position,omitempty"`
	// The ID of a later milestone that cannot be started until this milestone has a timestamp populated
	RequiredAtMilestoneID *string `json:"required_at_milestone_id,omitempty"`
	// The setting for auto-assigning the milestone's timestamp during incident declaration
	AutoAssignTimestampOnCreate *UpdateLifecycleMilestoneAutoAssignTimestampOnCreate `json:"auto_assign_timestamp_on_create,omitempty"`
}

func (u *UpdateLifecycleMilestoneRequestBody) GetName() *string {
	if u == nil {
		return nil
	}
	return u.Name
}

func (u *UpdateLifecycleMilestoneRequestBody) GetDescription() *string {
	if u == nil {
		return nil
	}
	return u.Description
}

func (u *UpdateLifecycleMilestoneRequestBody) GetSlug() *string {
	if u == nil {
		return nil
	}
	return u.Slug
}

func (u *UpdateLifecycleMilestoneRequestBody) GetPosition() *int {
	if u == nil {
		return nil
	}
	return u.Position
}

func (u *UpdateLifecycleMilestoneRequestBody) GetRequiredAtMilestoneID() *string {
	if u == nil {
		return nil
	}
	return u.RequiredAtMilestoneID
}

func (u *UpdateLifecycleMilestoneRequestBody) GetAutoAssignTimestampOnCreate() *UpdateLifecycleMilestoneAutoAssignTimestampOnCreate {
	if u == nil {
		return nil
	}
	return u.AutoAssignTimestampOnCreate
}

type UpdateLifecycleMilestoneRequest struct {
	MilestoneID string                               `pathParam:"style=simple,explode=false,name=milestone_id"`
	RequestBody *UpdateLifecycleMilestoneRequestBody `request:"mediaType=application/json"`
}

func (u *UpdateLifecycleMilestoneRequest) GetMilestoneID() string {
	if u == nil {
		return ""
	}
	return u.MilestoneID
}

func (u *UpdateLifecycleMilestoneRequest) GetRequestBody() *UpdateLifecycleMilestoneRequestBody {
	if u == nil {
		return nil
	}
	return u.RequestBody
}
