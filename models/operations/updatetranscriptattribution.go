// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

type UpdateTranscriptAttributionRequestBody struct {
	// The speaker to attribute the transcript to.
	FromSpeaker *string `json:"from_speaker,omitempty"`
	// The user to attribute the transcript to.
	FromUserID *string `json:"from_user_id,omitempty"`
	// The ID of the user to attribute the transcript to.
	ToUserID string `json:"to_user_id"`
	// The ID of the specific transcript entry to change attribution for.
	TranscriptID *string `json:"transcript_id,omitempty"`
	// The ID of the conference bridge to attribute the transcript to.
	ConferenceBridgeID *string `json:"conference_bridge_id,omitempty"`
}

func (u *UpdateTranscriptAttributionRequestBody) GetFromSpeaker() *string {
	if u == nil {
		return nil
	}
	return u.FromSpeaker
}

func (u *UpdateTranscriptAttributionRequestBody) GetFromUserID() *string {
	if u == nil {
		return nil
	}
	return u.FromUserID
}

func (u *UpdateTranscriptAttributionRequestBody) GetToUserID() string {
	if u == nil {
		return ""
	}
	return u.ToUserID
}

func (u *UpdateTranscriptAttributionRequestBody) GetTranscriptID() *string {
	if u == nil {
		return nil
	}
	return u.TranscriptID
}

func (u *UpdateTranscriptAttributionRequestBody) GetConferenceBridgeID() *string {
	if u == nil {
		return nil
	}
	return u.ConferenceBridgeID
}

type UpdateTranscriptAttributionRequest struct {
	IncidentID  string                                 `pathParam:"style=simple,explode=false,name=incident_id"`
	RequestBody UpdateTranscriptAttributionRequestBody `request:"mediaType=application/json"`
}

func (u *UpdateTranscriptAttributionRequest) GetIncidentID() string {
	if u == nil {
		return ""
	}
	return u.IncidentID
}

func (u *UpdateTranscriptAttributionRequest) GetRequestBody() UpdateTranscriptAttributionRequestBody {
	if u == nil {
		return UpdateTranscriptAttributionRequestBody{}
	}
	return u.RequestBody
}
