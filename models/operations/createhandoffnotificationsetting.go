// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

// CreateHandoffNotificationSettingNotificationGroupMethod - The group method of notification that will be delivered.
type CreateHandoffNotificationSettingNotificationGroupMethod string

const (
	CreateHandoffNotificationSettingNotificationGroupMethodAny        CreateHandoffNotificationSettingNotificationGroupMethod = "any"
	CreateHandoffNotificationSettingNotificationGroupMethodPush       CreateHandoffNotificationSettingNotificationGroupMethod = "push"
	CreateHandoffNotificationSettingNotificationGroupMethodEmail      CreateHandoffNotificationSettingNotificationGroupMethod = "email"
	CreateHandoffNotificationSettingNotificationGroupMethodVoice      CreateHandoffNotificationSettingNotificationGroupMethod = "voice"
	CreateHandoffNotificationSettingNotificationGroupMethodMobileText CreateHandoffNotificationSettingNotificationGroupMethod = "mobile_text"
	CreateHandoffNotificationSettingNotificationGroupMethodChat       CreateHandoffNotificationSettingNotificationGroupMethod = "chat"
)

func (e CreateHandoffNotificationSettingNotificationGroupMethod) ToPointer() *CreateHandoffNotificationSettingNotificationGroupMethod {
	return &e
}
func (e *CreateHandoffNotificationSettingNotificationGroupMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "any":
		fallthrough
	case "push":
		fallthrough
	case "email":
		fallthrough
	case "voice":
		fallthrough
	case "mobile_text":
		fallthrough
	case "chat":
		*e = CreateHandoffNotificationSettingNotificationGroupMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateHandoffNotificationSettingNotificationGroupMethod: %v", v)
	}
}

// CreateHandoffNotificationSettingPriority - The priority of the notification.
type CreateHandoffNotificationSettingPriority string

const (
	CreateHandoffNotificationSettingPriorityHigh   CreateHandoffNotificationSettingPriority = "HIGH"
	CreateHandoffNotificationSettingPriorityMedium CreateHandoffNotificationSettingPriority = "MEDIUM"
	CreateHandoffNotificationSettingPriorityLow    CreateHandoffNotificationSettingPriority = "LOW"
)

func (e CreateHandoffNotificationSettingPriority) ToPointer() *CreateHandoffNotificationSettingPriority {
	return &e
}
func (e *CreateHandoffNotificationSettingPriority) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		*e = CreateHandoffNotificationSettingPriority(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateHandoffNotificationSettingPriority: %v", v)
	}
}

type CreateHandoffNotificationSettingRequest struct {
	// The group method of notification that will be delivered.
	NotificationGroupMethod CreateHandoffNotificationSettingNotificationGroupMethod `json:"notification_group_method"`
	// An ISO8601 duration string specifying the maximum delay of the notification.
	MaxDelay string `json:"max_delay"`
	// The priority of the notification.
	Priority CreateHandoffNotificationSettingPriority `json:"priority"`
}

func (o *CreateHandoffNotificationSettingRequest) GetNotificationGroupMethod() CreateHandoffNotificationSettingNotificationGroupMethod {
	if o == nil {
		return CreateHandoffNotificationSettingNotificationGroupMethod("")
	}
	return o.NotificationGroupMethod
}

func (o *CreateHandoffNotificationSettingRequest) GetMaxDelay() string {
	if o == nil {
		return ""
	}
	return o.MaxDelay
}

func (o *CreateHandoffNotificationSettingRequest) GetPriority() CreateHandoffNotificationSettingPriority {
	if o == nil {
		return CreateHandoffNotificationSettingPriority("")
	}
	return o.Priority
}
