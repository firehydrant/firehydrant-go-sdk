// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

type SectionsSlug string

const (
	SectionsSlugTimeline  SectionsSlug = "timeline"
	SectionsSlugKeyData   SectionsSlug = "key_data"
	SectionsSlugDetails   SectionsSlug = "details"
	SectionsSlugResources SectionsSlug = "resources"
	SectionsSlugActions   SectionsSlug = "actions"
)

func (e SectionsSlug) ToPointer() *SectionsSlug {
	return &e
}
func (e *SectionsSlug) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "timeline":
		fallthrough
	case "key_data":
		fallthrough
	case "details":
		fallthrough
	case "resources":
		fallthrough
	case "actions":
		*e = SectionsSlug(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SectionsSlug: %v", v)
	}
}

type CreateRetrospectiveTemplateFieldsType string

const (
	CreateRetrospectiveTemplateFieldsTypeText              CreateRetrospectiveTemplateFieldsType = "text"
	CreateRetrospectiveTemplateFieldsTypeSingleSelect      CreateRetrospectiveTemplateFieldsType = "single_select"
	CreateRetrospectiveTemplateFieldsTypeMultiSelect       CreateRetrospectiveTemplateFieldsType = "multi_select"
	CreateRetrospectiveTemplateFieldsTypeNumeric           CreateRetrospectiveTemplateFieldsType = "numeric"
	CreateRetrospectiveTemplateFieldsTypeDatetime          CreateRetrospectiveTemplateFieldsType = "datetime"
	CreateRetrospectiveTemplateFieldsTypeDynamicInputGroup CreateRetrospectiveTemplateFieldsType = "dynamic_input_group"
	CreateRetrospectiveTemplateFieldsTypeMarkdown          CreateRetrospectiveTemplateFieldsType = "markdown"
	CreateRetrospectiveTemplateFieldsTypeMarkdownText      CreateRetrospectiveTemplateFieldsType = "markdown_text"
)

func (e CreateRetrospectiveTemplateFieldsType) ToPointer() *CreateRetrospectiveTemplateFieldsType {
	return &e
}
func (e *CreateRetrospectiveTemplateFieldsType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "text":
		fallthrough
	case "single_select":
		fallthrough
	case "multi_select":
		fallthrough
	case "numeric":
		fallthrough
	case "datetime":
		fallthrough
	case "dynamic_input_group":
		fallthrough
	case "markdown":
		fallthrough
	case "markdown_text":
		*e = CreateRetrospectiveTemplateFieldsType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateRetrospectiveTemplateFieldsType: %v", v)
	}
}

type CreateRetrospectiveTemplateRequest struct {
	Name                        string                                  `json:"name"`
	Description                 string                                  `json:"description"`
	IsDefault                   *bool                                   `json:"is_default,omitempty"`
	SectionsSlug                []SectionsSlug                          `json:"sections[slug]"`
	SectionsElements            []string                                `json:"sections[elements]"`
	FieldsLabel                 []string                                `json:"fields[label]"`
	FieldsType                  []CreateRetrospectiveTemplateFieldsType `json:"fields[type]"`
	FieldsHelpText              []string                                `json:"fields[help_text],omitempty"`
	FieldsPermissibleValues     []string                                `json:"fields[permissible_values],omitempty"`
	FieldsIsRequired            []bool                                  `json:"fields[is_required],omitempty"`
	FieldsRequiredAtMilestoneID []string                                `json:"fields[required_at_milestone_id],omitempty"`
	FieldsSchema                []string                                `json:"fields[schema],omitempty"`
}

func (c *CreateRetrospectiveTemplateRequest) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CreateRetrospectiveTemplateRequest) GetDescription() string {
	if c == nil {
		return ""
	}
	return c.Description
}

func (c *CreateRetrospectiveTemplateRequest) GetIsDefault() *bool {
	if c == nil {
		return nil
	}
	return c.IsDefault
}

func (c *CreateRetrospectiveTemplateRequest) GetSectionsSlug() []SectionsSlug {
	if c == nil {
		return []SectionsSlug{}
	}
	return c.SectionsSlug
}

func (c *CreateRetrospectiveTemplateRequest) GetSectionsElements() []string {
	if c == nil {
		return []string{}
	}
	return c.SectionsElements
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsLabel() []string {
	if c == nil {
		return []string{}
	}
	return c.FieldsLabel
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsType() []CreateRetrospectiveTemplateFieldsType {
	if c == nil {
		return []CreateRetrospectiveTemplateFieldsType{}
	}
	return c.FieldsType
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsHelpText() []string {
	if c == nil {
		return nil
	}
	return c.FieldsHelpText
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsPermissibleValues() []string {
	if c == nil {
		return nil
	}
	return c.FieldsPermissibleValues
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsIsRequired() []bool {
	if c == nil {
		return nil
	}
	return c.FieldsIsRequired
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsRequiredAtMilestoneID() []string {
	if c == nil {
		return nil
	}
	return c.FieldsRequiredAtMilestoneID
}

func (c *CreateRetrospectiveTemplateRequest) GetFieldsSchema() []string {
	if c == nil {
		return nil
	}
	return c.FieldsSchema
}
