// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type GetCustomFieldSelectOptionsRequest struct {
	FieldID string `pathParam:"style=simple,explode=false,name=field_id"`
	// Text string of a query for filtering values.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// If true, return all versions of the custom field definition.
	AllVersions *bool `queryParam:"style=form,explode=true,name=all_versions"`
}

func (o *GetCustomFieldSelectOptionsRequest) GetFieldID() string {
	if o == nil {
		return ""
	}
	return o.FieldID
}

func (o *GetCustomFieldSelectOptionsRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *GetCustomFieldSelectOptionsRequest) GetAllVersions() *bool {
	if o == nil {
		return nil
	}
	return o.AllVersions
}

type GetCustomFieldSelectOptionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Get the permissible values for the a currently active custom select or multi-select field.
	OrganizationsCustomFieldDefinitionEntity *components.OrganizationsCustomFieldDefinitionEntity
}

func (o *GetCustomFieldSelectOptionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetCustomFieldSelectOptionsResponse) GetOrganizationsCustomFieldDefinitionEntity() *components.OrganizationsCustomFieldDefinitionEntity {
	if o == nil {
		return nil
	}
	return o.OrganizationsCustomFieldDefinitionEntity
}
