// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/models/components"
	"fmt"
)

type CreateIncidentImpactType string

const (
	CreateIncidentImpactTypeEnvironments    CreateIncidentImpactType = "environments"
	CreateIncidentImpactTypeFunctionalities CreateIncidentImpactType = "functionalities"
	CreateIncidentImpactTypeServices        CreateIncidentImpactType = "services"
	CreateIncidentImpactTypeCustomers       CreateIncidentImpactType = "customers"
)

func (e CreateIncidentImpactType) ToPointer() *CreateIncidentImpactType {
	return &e
}
func (e *CreateIncidentImpactType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environments":
		fallthrough
	case "functionalities":
		fallthrough
	case "services":
		fallthrough
	case "customers":
		*e = CreateIncidentImpactType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncidentImpactType: %v", v)
	}
}

type CreateIncidentImpactRequest struct {
	IncidentID           string                          `pathParam:"style=simple,explode=false,name=incident_id"`
	Type                 CreateIncidentImpactType        `pathParam:"style=simple,explode=false,name=type"`
	CreateIncidentImpact components.CreateIncidentImpact `request:"mediaType=application/json"`
}

func (o *CreateIncidentImpactRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *CreateIncidentImpactRequest) GetType() CreateIncidentImpactType {
	if o == nil {
		return CreateIncidentImpactType("")
	}
	return o.Type
}

func (o *CreateIncidentImpactRequest) GetCreateIncidentImpact() components.CreateIncidentImpact {
	if o == nil {
		return components.CreateIncidentImpact{}
	}
	return o.CreateIncidentImpact
}
