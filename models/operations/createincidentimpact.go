// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/models/components"
	"fmt"
)

type CreateIncidentImpactPathParamType string

const (
	CreateIncidentImpactPathParamTypeEnvironments    CreateIncidentImpactPathParamType = "environments"
	CreateIncidentImpactPathParamTypeFunctionalities CreateIncidentImpactPathParamType = "functionalities"
	CreateIncidentImpactPathParamTypeServices        CreateIncidentImpactPathParamType = "services"
	CreateIncidentImpactPathParamTypeCustomers       CreateIncidentImpactPathParamType = "customers"
)

func (e CreateIncidentImpactPathParamType) ToPointer() *CreateIncidentImpactPathParamType {
	return &e
}
func (e *CreateIncidentImpactPathParamType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environments":
		fallthrough
	case "functionalities":
		fallthrough
	case "services":
		fallthrough
	case "customers":
		*e = CreateIncidentImpactPathParamType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateIncidentImpactPathParamType: %v", v)
	}
}

type CreateIncidentImpactRequest struct {
	IncidentID                          string                                         `pathParam:"style=simple,explode=false,name=incident_id"`
	Type                                CreateIncidentImpactPathParamType              `pathParam:"style=simple,explode=false,name=type"`
	PostV1IncidentsIncidentIDImpactType components.PostV1IncidentsIncidentIDImpactType `request:"mediaType=application/json"`
}

func (o *CreateIncidentImpactRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *CreateIncidentImpactRequest) GetType() CreateIncidentImpactPathParamType {
	if o == nil {
		return CreateIncidentImpactPathParamType("")
	}
	return o.Type
}

func (o *CreateIncidentImpactRequest) GetPostV1IncidentsIncidentIDImpactType() components.PostV1IncidentsIncidentIDImpactType {
	if o == nil {
		return components.PostV1IncidentsIncidentIDImpactType{}
	}
	return o.PostV1IncidentsIncidentIDImpactType
}

type CreateIncidentImpactResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Add impacted infrastructure to an incident
	IncidentImpactEntity *components.IncidentImpactEntity
}

func (o *CreateIncidentImpactResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateIncidentImpactResponse) GetIncidentImpactEntity() *components.IncidentImpactEntity {
	if o == nil {
		return nil
	}
	return o.IncidentImpactEntity
}
