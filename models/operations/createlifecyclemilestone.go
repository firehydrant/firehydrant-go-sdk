// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

// CreateLifecycleMilestoneAutoAssignTimestampOnCreate - The setting for auto-assigning the milestone's timestamp during incident declaration
type CreateLifecycleMilestoneAutoAssignTimestampOnCreate string

const (
	CreateLifecycleMilestoneAutoAssignTimestampOnCreateAlwaysSetOnCreate     CreateLifecycleMilestoneAutoAssignTimestampOnCreate = "always_set_on_create"
	CreateLifecycleMilestoneAutoAssignTimestampOnCreateOnlySetOnManualCreate CreateLifecycleMilestoneAutoAssignTimestampOnCreate = "only_set_on_manual_create"
	CreateLifecycleMilestoneAutoAssignTimestampOnCreateNeverSetOnCreate      CreateLifecycleMilestoneAutoAssignTimestampOnCreate = "never_set_on_create"
)

func (e CreateLifecycleMilestoneAutoAssignTimestampOnCreate) ToPointer() *CreateLifecycleMilestoneAutoAssignTimestampOnCreate {
	return &e
}
func (e *CreateLifecycleMilestoneAutoAssignTimestampOnCreate) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "always_set_on_create":
		fallthrough
	case "only_set_on_manual_create":
		fallthrough
	case "never_set_on_create":
		*e = CreateLifecycleMilestoneAutoAssignTimestampOnCreate(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateLifecycleMilestoneAutoAssignTimestampOnCreate: %v", v)
	}
}

type CreateLifecycleMilestoneRequest struct {
	// The name of the milestone
	Name string `json:"name"`
	// A long-form description of the milestone's purpose
	Description string `json:"description"`
	// A unique identifier for the milestone. If not provided, one will be generated from the name.
	Slug *string `json:"slug,omitempty"`
	// The ID of the phase to which the milestone should belong
	PhaseID string `json:"phase_id"`
	// The position of the milestone within the phase. If not provided, the milestone will be added as the last milestone in the phase.
	Position *int `json:"position,omitempty"`
	// The ID of a later milestone that cannot be started until this milestone has a timestamp populated
	RequiredAtMilestoneID *string `json:"required_at_milestone_id,omitempty"`
	// The setting for auto-assigning the milestone's timestamp during incident declaration
	AutoAssignTimestampOnCreate *CreateLifecycleMilestoneAutoAssignTimestampOnCreate `json:"auto_assign_timestamp_on_create,omitempty"`
}

func (c *CreateLifecycleMilestoneRequest) GetName() string {
	if c == nil {
		return ""
	}
	return c.Name
}

func (c *CreateLifecycleMilestoneRequest) GetDescription() string {
	if c == nil {
		return ""
	}
	return c.Description
}

func (c *CreateLifecycleMilestoneRequest) GetSlug() *string {
	if c == nil {
		return nil
	}
	return c.Slug
}

func (c *CreateLifecycleMilestoneRequest) GetPhaseID() string {
	if c == nil {
		return ""
	}
	return c.PhaseID
}

func (c *CreateLifecycleMilestoneRequest) GetPosition() *int {
	if c == nil {
		return nil
	}
	return c.Position
}

func (c *CreateLifecycleMilestoneRequest) GetRequiredAtMilestoneID() *string {
	if c == nil {
		return nil
	}
	return c.RequiredAtMilestoneID
}

func (c *CreateLifecycleMilestoneRequest) GetAutoAssignTimestampOnCreate() *CreateLifecycleMilestoneAutoAssignTimestampOnCreate {
	if c == nil {
		return nil
	}
	return c.AutoAssignTimestampOnCreate
}
