// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/internal/utils"
	"firehydrant/models/components"
	"firehydrant/types"
	"fmt"
)

type InfraType string

const (
	InfraTypeEnvironments    InfraType = "environments"
	InfraTypeFunctionalities InfraType = "functionalities"
	InfraTypeServices        InfraType = "services"
	InfraTypeCustomers       InfraType = "customers"
)

func (e InfraType) ToPointer() *InfraType {
	return &e
}
func (e *InfraType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environments":
		fallthrough
	case "functionalities":
		fallthrough
	case "services":
		fallthrough
	case "customers":
		*e = InfraType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for InfraType: %v", v)
	}
}

type ListInfrastructureMetricsRequest struct {
	InfraType InfraType `pathParam:"style=simple,explode=false,name=infra_type"`
	// The start date to return metrics from; defaults to 30 days ago
	StartDate *types.Date `queryParam:"style=form,explode=true,name=start_date"`
	// The end date to return metrics from, defaults to today
	EndDate *types.Date `queryParam:"style=form,explode=true,name=end_date"`
}

func (l ListInfrastructureMetricsRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListInfrastructureMetricsRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ListInfrastructureMetricsRequest) GetInfraType() InfraType {
	if o == nil {
		return InfraType("")
	}
	return o.InfraType
}

func (o *ListInfrastructureMetricsRequest) GetStartDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *ListInfrastructureMetricsRequest) GetEndDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.EndDate
}

type ListInfrastructureMetricsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Returns metrics for all components of a given type
	MetricsInfrastructureListEntity *components.MetricsInfrastructureListEntity
}

func (o *ListInfrastructureMetricsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListInfrastructureMetricsResponse) GetMetricsInfrastructureListEntity() *components.MetricsInfrastructureListEntity {
	if o == nil {
		return nil
	}
	return o.MetricsInfrastructureListEntity
}
