// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/models/components"
	"fmt"
)

// ListRunbooksQueryParamSort - Sort runbooks by their updated date. Accepts 'asc', 'desc'
type ListRunbooksQueryParamSort string

const (
	ListRunbooksQueryParamSortAsc  ListRunbooksQueryParamSort = "asc"
	ListRunbooksQueryParamSortDesc ListRunbooksQueryParamSort = "desc"
)

func (e ListRunbooksQueryParamSort) ToPointer() *ListRunbooksQueryParamSort {
	return &e
}
func (e *ListRunbooksQueryParamSort) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "asc":
		fallthrough
	case "desc":
		*e = ListRunbooksQueryParamSort(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ListRunbooksQueryParamSort: %v", v)
	}
}

type ListRunbooksRequest struct {
	Page    *int `queryParam:"style=form,explode=true,name=page"`
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// A query to search runbooks by their name
	Name *string `queryParam:"style=form,explode=true,name=name"`
	// A query to search runbooks by their owners
	Owners *string `queryParam:"style=form,explode=true,name=owners"`
	// Sort runbooks by their updated date. Accepts 'asc', 'desc'
	Sort *ListRunbooksQueryParamSort `queryParam:"style=form,explode=true,name=sort"`
}

func (o *ListRunbooksRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *ListRunbooksRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *ListRunbooksRequest) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListRunbooksRequest) GetOwners() *string {
	if o == nil {
		return nil
	}
	return o.Owners
}

func (o *ListRunbooksRequest) GetSort() *ListRunbooksQueryParamSort {
	if o == nil {
		return nil
	}
	return o.Sort
}

type ListRunbooksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Lists all available runbooks.
	RunbookEntity *components.RunbookEntity
}

func (o *ListRunbooksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListRunbooksResponse) GetRunbookEntity() *components.RunbookEntity {
	if o == nil {
		return nil
	}
	return o.RunbookEntity
}
