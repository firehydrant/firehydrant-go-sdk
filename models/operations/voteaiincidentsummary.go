// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

type Direction string

const (
	DirectionUp   Direction = "up"
	DirectionDown Direction = "down"
)

func (e Direction) ToPointer() *Direction {
	return &e
}
func (e *Direction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "up":
		fallthrough
	case "down":
		*e = Direction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Direction: %v", v)
	}
}

type VoteAiIncidentSummaryRequestBody struct {
	Direction Direction `json:"direction"`
}

func (v *VoteAiIncidentSummaryRequestBody) GetDirection() Direction {
	if v == nil {
		return Direction("")
	}
	return v.Direction
}

type VoteAiIncidentSummaryRequest struct {
	IncidentID         string                           `pathParam:"style=simple,explode=false,name=incident_id"`
	GeneratedSummaryID string                           `pathParam:"style=simple,explode=false,name=generated_summary_id"`
	RequestBody        VoteAiIncidentSummaryRequestBody `request:"mediaType=application/json"`
}

func (v *VoteAiIncidentSummaryRequest) GetIncidentID() string {
	if v == nil {
		return ""
	}
	return v.IncidentID
}

func (v *VoteAiIncidentSummaryRequest) GetGeneratedSummaryID() string {
	if v == nil {
		return ""
	}
	return v.GeneratedSummaryID
}

func (v *VoteAiIncidentSummaryRequest) GetRequestBody() VoteAiIncidentSummaryRequestBody {
	if v == nil {
		return VoteAiIncidentSummaryRequestBody{}
	}
	return v.RequestBody
}
