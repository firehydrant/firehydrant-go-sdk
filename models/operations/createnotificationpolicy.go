// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

// CreateNotificationPolicyNotificationGroupMethod - The group method of notification that will be delivered.
type CreateNotificationPolicyNotificationGroupMethod string

const (
	CreateNotificationPolicyNotificationGroupMethodAny        CreateNotificationPolicyNotificationGroupMethod = "any"
	CreateNotificationPolicyNotificationGroupMethodPush       CreateNotificationPolicyNotificationGroupMethod = "push"
	CreateNotificationPolicyNotificationGroupMethodEmail      CreateNotificationPolicyNotificationGroupMethod = "email"
	CreateNotificationPolicyNotificationGroupMethodVoice      CreateNotificationPolicyNotificationGroupMethod = "voice"
	CreateNotificationPolicyNotificationGroupMethodMobileText CreateNotificationPolicyNotificationGroupMethod = "mobile_text"
	CreateNotificationPolicyNotificationGroupMethodChat       CreateNotificationPolicyNotificationGroupMethod = "chat"
)

func (e CreateNotificationPolicyNotificationGroupMethod) ToPointer() *CreateNotificationPolicyNotificationGroupMethod {
	return &e
}
func (e *CreateNotificationPolicyNotificationGroupMethod) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "any":
		fallthrough
	case "push":
		fallthrough
	case "email":
		fallthrough
	case "voice":
		fallthrough
	case "mobile_text":
		fallthrough
	case "chat":
		*e = CreateNotificationPolicyNotificationGroupMethod(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNotificationPolicyNotificationGroupMethod: %v", v)
	}
}

// CreateNotificationPolicyPriority - The priority of the notification.
type CreateNotificationPolicyPriority string

const (
	CreateNotificationPolicyPriorityHigh   CreateNotificationPolicyPriority = "HIGH"
	CreateNotificationPolicyPriorityMedium CreateNotificationPolicyPriority = "MEDIUM"
	CreateNotificationPolicyPriorityLow    CreateNotificationPolicyPriority = "LOW"
)

func (e CreateNotificationPolicyPriority) ToPointer() *CreateNotificationPolicyPriority {
	return &e
}
func (e *CreateNotificationPolicyPriority) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "HIGH":
		fallthrough
	case "MEDIUM":
		fallthrough
	case "LOW":
		*e = CreateNotificationPolicyPriority(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateNotificationPolicyPriority: %v", v)
	}
}

type CreateNotificationPolicyRequest struct {
	// The group method of notification that will be delivered.
	NotificationGroupMethod CreateNotificationPolicyNotificationGroupMethod `json:"notification_group_method"`
	// An ISO8601 duration string specifying the maximum delay of the notification.
	MaxDelay string `json:"max_delay"`
	// The priority of the notification.
	Priority CreateNotificationPolicyPriority `json:"priority"`
}

func (c *CreateNotificationPolicyRequest) GetNotificationGroupMethod() CreateNotificationPolicyNotificationGroupMethod {
	if c == nil {
		return CreateNotificationPolicyNotificationGroupMethod("")
	}
	return c.NotificationGroupMethod
}

func (c *CreateNotificationPolicyRequest) GetMaxDelay() string {
	if c == nil {
		return ""
	}
	return c.MaxDelay
}

func (c *CreateNotificationPolicyRequest) GetPriority() CreateNotificationPolicyPriority {
	if c == nil {
		return CreateNotificationPolicyPriority("")
	}
	return c.Priority
}
