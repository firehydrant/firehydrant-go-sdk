// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type CreateIncidentGenericChatMessageRequest struct {
	IncidentID                                   string                                                  `pathParam:"style=simple,explode=false,name=incident_id"`
	PostV1IncidentsIncidentIDGenericChatMessages components.PostV1IncidentsIncidentIDGenericChatMessages `request:"mediaType=application/json"`
}

func (o *CreateIncidentGenericChatMessageRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *CreateIncidentGenericChatMessageRequest) GetPostV1IncidentsIncidentIDGenericChatMessages() components.PostV1IncidentsIncidentIDGenericChatMessages {
	if o == nil {
		return components.PostV1IncidentsIncidentIDGenericChatMessages{}
	}
	return o.PostV1IncidentsIncidentIDGenericChatMessages
}

type CreateIncidentGenericChatMessageResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Create a new generic chat message on an incident timeline. These are independent of any specific chat provider.
	EventGenericChatMessageEntity *components.EventGenericChatMessageEntity
}

func (o *CreateIncidentGenericChatMessageResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateIncidentGenericChatMessageResponse) GetEventGenericChatMessageEntity() *components.EventGenericChatMessageEntity {
	if o == nil {
		return nil
	}
	return o.EventGenericChatMessageEntity
}
