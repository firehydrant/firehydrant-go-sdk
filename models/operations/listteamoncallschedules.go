// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

type ListTeamOnCallSchedulesRequest struct {
	TeamID string `pathParam:"style=simple,explode=false,name=team_id"`
	// An optional ISO8601 timestamp for filtering the shifts listed in each on-call schedule to only include shifts that overlap with the provided time window. If provided, only shifts that end at or after this time will be included.
	ShiftTimeWindowStart *string `queryParam:"style=form,explode=true,name=shift_time_window_start"`
	// An optional ISO8601 timestamp for filtering the shifts listed in each on-call schedule to only include shifts that overlap with the provided time window.. If provided, only shifts that start at or before this time will be included.
	ShiftTimeWindowEnd *string `queryParam:"style=form,explode=true,name=shift_time_window_end"`
	// A query string for searching through the list of on-call schedules.
	Query   *string `queryParam:"style=form,explode=true,name=query"`
	Page    *int    `queryParam:"style=form,explode=true,name=page"`
	PerPage *int    `queryParam:"style=form,explode=true,name=per_page"`
}

func (l *ListTeamOnCallSchedulesRequest) GetTeamID() string {
	if l == nil {
		return ""
	}
	return l.TeamID
}

func (l *ListTeamOnCallSchedulesRequest) GetShiftTimeWindowStart() *string {
	if l == nil {
		return nil
	}
	return l.ShiftTimeWindowStart
}

func (l *ListTeamOnCallSchedulesRequest) GetShiftTimeWindowEnd() *string {
	if l == nil {
		return nil
	}
	return l.ShiftTimeWindowEnd
}

func (l *ListTeamOnCallSchedulesRequest) GetQuery() *string {
	if l == nil {
		return nil
	}
	return l.Query
}

func (l *ListTeamOnCallSchedulesRequest) GetPage() *int {
	if l == nil {
		return nil
	}
	return l.Page
}

func (l *ListTeamOnCallSchedulesRequest) GetPerPage() *int {
	if l == nil {
		return nil
	}
	return l.PerPage
}
