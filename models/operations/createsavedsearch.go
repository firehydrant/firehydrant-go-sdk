// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/models/components"
	"fmt"
)

type PathParamResourceType string

const (
	PathParamResourceTypeChangeEvents          PathParamResourceType = "change_events"
	PathParamResourceTypeIncidents             PathParamResourceType = "incidents"
	PathParamResourceTypeServices              PathParamResourceType = "services"
	PathParamResourceTypeScheduledMaintenances PathParamResourceType = "scheduled_maintenances"
	PathParamResourceTypeTicketTasks           PathParamResourceType = "ticket_tasks"
	PathParamResourceTypeTicketFollowUps       PathParamResourceType = "ticket_follow_ups"
	PathParamResourceTypeAnalytics             PathParamResourceType = "analytics"
	PathParamResourceTypeImpactAnalytics       PathParamResourceType = "impact_analytics"
	PathParamResourceTypeAlerts                PathParamResourceType = "alerts"
	PathParamResourceTypeIncidentEvents        PathParamResourceType = "incident_events"
)

func (e PathParamResourceType) ToPointer() *PathParamResourceType {
	return &e
}
func (e *PathParamResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change_events":
		fallthrough
	case "incidents":
		fallthrough
	case "services":
		fallthrough
	case "scheduled_maintenances":
		fallthrough
	case "ticket_tasks":
		fallthrough
	case "ticket_follow_ups":
		fallthrough
	case "analytics":
		fallthrough
	case "impact_analytics":
		fallthrough
	case "alerts":
		fallthrough
	case "incident_events":
		*e = PathParamResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PathParamResourceType: %v", v)
	}
}

type CreateSavedSearchRequest struct {
	ResourceType                    PathParamResourceType                      `pathParam:"style=simple,explode=false,name=resource_type"`
	PostV1SavedSearchesResourceType components.PostV1SavedSearchesResourceType `request:"mediaType=application/json"`
}

func (o *CreateSavedSearchRequest) GetResourceType() PathParamResourceType {
	if o == nil {
		return PathParamResourceType("")
	}
	return o.ResourceType
}

func (o *CreateSavedSearchRequest) GetPostV1SavedSearchesResourceType() components.PostV1SavedSearchesResourceType {
	if o == nil {
		return components.PostV1SavedSearchesResourceType{}
	}
	return o.PostV1SavedSearchesResourceType
}

type CreateSavedSearchResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Create a new saved search for a particular resource type
	SavedSearchEntity *components.SavedSearchEntity
}

func (o *CreateSavedSearchResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateSavedSearchResponse) GetSavedSearchEntity() *components.SavedSearchEntity {
	if o == nil {
		return nil
	}
	return o.SavedSearchEntity
}
