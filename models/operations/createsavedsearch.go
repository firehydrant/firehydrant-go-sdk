// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/firehydrant/firehydrant-go-sdk/models/components"
)

type CreateSavedSearchResourceType string

const (
	CreateSavedSearchResourceTypeChangeEvents          CreateSavedSearchResourceType = "change_events"
	CreateSavedSearchResourceTypeIncidents             CreateSavedSearchResourceType = "incidents"
	CreateSavedSearchResourceTypeServices              CreateSavedSearchResourceType = "services"
	CreateSavedSearchResourceTypeScheduledMaintenances CreateSavedSearchResourceType = "scheduled_maintenances"
	CreateSavedSearchResourceTypeTicketTasks           CreateSavedSearchResourceType = "ticket_tasks"
	CreateSavedSearchResourceTypeTicketFollowUps       CreateSavedSearchResourceType = "ticket_follow_ups"
	CreateSavedSearchResourceTypeAnalytics             CreateSavedSearchResourceType = "analytics"
	CreateSavedSearchResourceTypeImpactAnalytics       CreateSavedSearchResourceType = "impact_analytics"
	CreateSavedSearchResourceTypeAlerts                CreateSavedSearchResourceType = "alerts"
	CreateSavedSearchResourceTypeIncidentEvents        CreateSavedSearchResourceType = "incident_events"
)

func (e CreateSavedSearchResourceType) ToPointer() *CreateSavedSearchResourceType {
	return &e
}
func (e *CreateSavedSearchResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change_events":
		fallthrough
	case "incidents":
		fallthrough
	case "services":
		fallthrough
	case "scheduled_maintenances":
		fallthrough
	case "ticket_tasks":
		fallthrough
	case "ticket_follow_ups":
		fallthrough
	case "analytics":
		fallthrough
	case "impact_analytics":
		fallthrough
	case "alerts":
		fallthrough
	case "incident_events":
		*e = CreateSavedSearchResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateSavedSearchResourceType: %v", v)
	}
}

type CreateSavedSearchRequest struct {
	ResourceType      CreateSavedSearchResourceType `pathParam:"style=simple,explode=false,name=resource_type"`
	CreateSavedSearch components.CreateSavedSearch  `request:"mediaType=application/json"`
}

func (o *CreateSavedSearchRequest) GetResourceType() CreateSavedSearchResourceType {
	if o == nil {
		return CreateSavedSearchResourceType("")
	}
	return o.ResourceType
}

func (o *CreateSavedSearchRequest) GetCreateSavedSearch() components.CreateSavedSearch {
	if o == nil {
		return components.CreateSavedSearch{}
	}
	return o.CreateSavedSearch
}
