// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type UpdateMeasurementDefinitionRequestBody struct {
	Name                *string `json:"name,omitempty"`
	Slug                *string `json:"slug,omitempty"`
	Description         *string `json:"description,omitempty"`
	StartsAtMilestoneID *string `json:"starts_at_milestone_id,omitempty"`
	EndsAtMilestoneID   *string `json:"ends_at_milestone_id,omitempty"`
}

func (o *UpdateMeasurementDefinitionRequestBody) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *UpdateMeasurementDefinitionRequestBody) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *UpdateMeasurementDefinitionRequestBody) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateMeasurementDefinitionRequestBody) GetStartsAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.StartsAtMilestoneID
}

func (o *UpdateMeasurementDefinitionRequestBody) GetEndsAtMilestoneID() *string {
	if o == nil {
		return nil
	}
	return o.EndsAtMilestoneID
}

type UpdateMeasurementDefinitionRequest struct {
	MeasurementDefinitionID string                                  `pathParam:"style=simple,explode=false,name=measurement_definition_id"`
	RequestBody             *UpdateMeasurementDefinitionRequestBody `request:"mediaType=application/json"`
}

func (o *UpdateMeasurementDefinitionRequest) GetMeasurementDefinitionID() string {
	if o == nil {
		return ""
	}
	return o.MeasurementDefinitionID
}

func (o *UpdateMeasurementDefinitionRequest) GetRequestBody() *UpdateMeasurementDefinitionRequestBody {
	if o == nil {
		return nil
	}
	return o.RequestBody
}

type UpdateMeasurementDefinitionResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *UpdateMeasurementDefinitionResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
