// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type UpdateIncidentEventVotesRequest struct {
	IncidentID                                   string                                                  `pathParam:"style=simple,explode=false,name=incident_id"`
	EventID                                      string                                                  `pathParam:"style=simple,explode=false,name=event_id"`
	PatchV1IncidentsIncidentIDEventsEventIDVotes components.PatchV1IncidentsIncidentIDEventsEventIDVotes `request:"mediaType=application/json"`
}

func (o *UpdateIncidentEventVotesRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

func (o *UpdateIncidentEventVotesRequest) GetEventID() string {
	if o == nil {
		return ""
	}
	return o.EventID
}

func (o *UpdateIncidentEventVotesRequest) GetPatchV1IncidentsIncidentIDEventsEventIDVotes() components.PatchV1IncidentsIncidentIDEventsEventIDVotes {
	if o == nil {
		return components.PatchV1IncidentsIncidentIDEventsEventIDVotes{}
	}
	return o.PatchV1IncidentsIncidentIDEventsEventIDVotes
}

type UpdateIncidentEventVotesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Allows for upvoting or downvoting an event
	VotesEntity *components.VotesEntity
}

func (o *UpdateIncidentEventVotesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpdateIncidentEventVotesResponse) GetVotesEntity() *components.VotesEntity {
	if o == nil {
		return nil
	}
	return o.VotesEntity
}
