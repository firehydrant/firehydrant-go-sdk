// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/models/components"
	"fmt"
)

type GetSavedSearchPathParamResourceType string

const (
	GetSavedSearchPathParamResourceTypeChangeEvents          GetSavedSearchPathParamResourceType = "change_events"
	GetSavedSearchPathParamResourceTypeIncidents             GetSavedSearchPathParamResourceType = "incidents"
	GetSavedSearchPathParamResourceTypeServices              GetSavedSearchPathParamResourceType = "services"
	GetSavedSearchPathParamResourceTypeScheduledMaintenances GetSavedSearchPathParamResourceType = "scheduled_maintenances"
	GetSavedSearchPathParamResourceTypeTicketTasks           GetSavedSearchPathParamResourceType = "ticket_tasks"
	GetSavedSearchPathParamResourceTypeTicketFollowUps       GetSavedSearchPathParamResourceType = "ticket_follow_ups"
	GetSavedSearchPathParamResourceTypeAnalytics             GetSavedSearchPathParamResourceType = "analytics"
	GetSavedSearchPathParamResourceTypeImpactAnalytics       GetSavedSearchPathParamResourceType = "impact_analytics"
	GetSavedSearchPathParamResourceTypeAlerts                GetSavedSearchPathParamResourceType = "alerts"
	GetSavedSearchPathParamResourceTypeIncidentEvents        GetSavedSearchPathParamResourceType = "incident_events"
)

func (e GetSavedSearchPathParamResourceType) ToPointer() *GetSavedSearchPathParamResourceType {
	return &e
}
func (e *GetSavedSearchPathParamResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change_events":
		fallthrough
	case "incidents":
		fallthrough
	case "services":
		fallthrough
	case "scheduled_maintenances":
		fallthrough
	case "ticket_tasks":
		fallthrough
	case "ticket_follow_ups":
		fallthrough
	case "analytics":
		fallthrough
	case "impact_analytics":
		fallthrough
	case "alerts":
		fallthrough
	case "incident_events":
		*e = GetSavedSearchPathParamResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSavedSearchPathParamResourceType: %v", v)
	}
}

type GetSavedSearchRequest struct {
	ResourceType  GetSavedSearchPathParamResourceType `pathParam:"style=simple,explode=false,name=resource_type"`
	SavedSearchID string                              `pathParam:"style=simple,explode=false,name=saved_search_id"`
}

func (o *GetSavedSearchRequest) GetResourceType() GetSavedSearchPathParamResourceType {
	if o == nil {
		return GetSavedSearchPathParamResourceType("")
	}
	return o.ResourceType
}

func (o *GetSavedSearchRequest) GetSavedSearchID() string {
	if o == nil {
		return ""
	}
	return o.SavedSearchID
}

type GetSavedSearchResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Retrieve a specific save search
	SavedSearchEntity *components.SavedSearchEntity
}

func (o *GetSavedSearchResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSavedSearchResponse) GetSavedSearchEntity() *components.SavedSearchEntity {
	if o == nil {
		return nil
	}
	return o.SavedSearchEntity
}
