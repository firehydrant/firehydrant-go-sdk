// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/firehydrant/firehydrant-go-sdk/internal/utils"
	"time"
)

type ListRetrospectivesRequest struct {
	Page    *int `queryParam:"style=form,explode=true,name=page"`
	PerPage *int `queryParam:"style=form,explode=true,name=per_page"`
	// Filter the reports by an incident ID
	IncidentID *string `queryParam:"style=form,explode=true,name=incident_id"`
	// Filter for reports updated after the given ISO8601 timestamp
	UpdatedSince *time.Time `queryParam:"style=form,explode=true,name=updated_since"`
}

func (l ListRetrospectivesRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListRetrospectivesRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (l *ListRetrospectivesRequest) GetPage() *int {
	if l == nil {
		return nil
	}
	return l.Page
}

func (l *ListRetrospectivesRequest) GetPerPage() *int {
	if l == nil {
		return nil
	}
	return l.PerPage
}

func (l *ListRetrospectivesRequest) GetIncidentID() *string {
	if l == nil {
		return nil
	}
	return l.IncidentID
}

func (l *ListRetrospectivesRequest) GetUpdatedSince() *time.Time {
	if l == nil {
		return nil
	}
	return l.UpdatedSince
}
