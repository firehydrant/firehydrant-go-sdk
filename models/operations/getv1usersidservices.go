// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type GetV1UsersIDServicesRequest struct {
	ID      string `pathParam:"style=simple,explode=false,name=id"`
	Page    *int   `queryParam:"style=form,explode=true,name=page"`
	PerPage *int   `queryParam:"style=form,explode=true,name=per_page"`
}

func (o *GetV1UsersIDServicesRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetV1UsersIDServicesRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetV1UsersIDServicesRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

type GetV1UsersIDServicesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Retrieves a list of services owned by the teams a user is on
	TeamEntityPaginateds []components.TeamEntityPaginated
}

func (o *GetV1UsersIDServicesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetV1UsersIDServicesResponse) GetTeamEntityPaginateds() []components.TeamEntityPaginated {
	if o == nil {
		return nil
	}
	return o.TeamEntityPaginateds
}
