// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"firehydrant/models/components"
	"fmt"
)

type DeleteSavedSearchPathParamResourceType string

const (
	DeleteSavedSearchPathParamResourceTypeChangeEvents          DeleteSavedSearchPathParamResourceType = "change_events"
	DeleteSavedSearchPathParamResourceTypeIncidents             DeleteSavedSearchPathParamResourceType = "incidents"
	DeleteSavedSearchPathParamResourceTypeServices              DeleteSavedSearchPathParamResourceType = "services"
	DeleteSavedSearchPathParamResourceTypeScheduledMaintenances DeleteSavedSearchPathParamResourceType = "scheduled_maintenances"
	DeleteSavedSearchPathParamResourceTypeTicketTasks           DeleteSavedSearchPathParamResourceType = "ticket_tasks"
	DeleteSavedSearchPathParamResourceTypeTicketFollowUps       DeleteSavedSearchPathParamResourceType = "ticket_follow_ups"
	DeleteSavedSearchPathParamResourceTypeAnalytics             DeleteSavedSearchPathParamResourceType = "analytics"
	DeleteSavedSearchPathParamResourceTypeImpactAnalytics       DeleteSavedSearchPathParamResourceType = "impact_analytics"
	DeleteSavedSearchPathParamResourceTypeAlerts                DeleteSavedSearchPathParamResourceType = "alerts"
	DeleteSavedSearchPathParamResourceTypeIncidentEvents        DeleteSavedSearchPathParamResourceType = "incident_events"
)

func (e DeleteSavedSearchPathParamResourceType) ToPointer() *DeleteSavedSearchPathParamResourceType {
	return &e
}
func (e *DeleteSavedSearchPathParamResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change_events":
		fallthrough
	case "incidents":
		fallthrough
	case "services":
		fallthrough
	case "scheduled_maintenances":
		fallthrough
	case "ticket_tasks":
		fallthrough
	case "ticket_follow_ups":
		fallthrough
	case "analytics":
		fallthrough
	case "impact_analytics":
		fallthrough
	case "alerts":
		fallthrough
	case "incident_events":
		*e = DeleteSavedSearchPathParamResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSavedSearchPathParamResourceType: %v", v)
	}
}

type DeleteSavedSearchRequest struct {
	ResourceType  DeleteSavedSearchPathParamResourceType `pathParam:"style=simple,explode=false,name=resource_type"`
	SavedSearchID string                                 `pathParam:"style=simple,explode=false,name=saved_search_id"`
}

func (o *DeleteSavedSearchRequest) GetResourceType() DeleteSavedSearchPathParamResourceType {
	if o == nil {
		return DeleteSavedSearchPathParamResourceType("")
	}
	return o.ResourceType
}

func (o *DeleteSavedSearchRequest) GetSavedSearchID() string {
	if o == nil {
		return ""
	}
	return o.SavedSearchID
}

type DeleteSavedSearchResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
}

func (o *DeleteSavedSearchResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}
