// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
)

type DeleteSavedSearchResourceType string

const (
	DeleteSavedSearchResourceTypeChangeEvents          DeleteSavedSearchResourceType = "change_events"
	DeleteSavedSearchResourceTypeIncidents             DeleteSavedSearchResourceType = "incidents"
	DeleteSavedSearchResourceTypeServices              DeleteSavedSearchResourceType = "services"
	DeleteSavedSearchResourceTypeScheduledMaintenances DeleteSavedSearchResourceType = "scheduled_maintenances"
	DeleteSavedSearchResourceTypeTicketTasks           DeleteSavedSearchResourceType = "ticket_tasks"
	DeleteSavedSearchResourceTypeTicketFollowUps       DeleteSavedSearchResourceType = "ticket_follow_ups"
	DeleteSavedSearchResourceTypeAnalytics             DeleteSavedSearchResourceType = "analytics"
	DeleteSavedSearchResourceTypeImpactAnalytics       DeleteSavedSearchResourceType = "impact_analytics"
	DeleteSavedSearchResourceTypeAlerts                DeleteSavedSearchResourceType = "alerts"
	DeleteSavedSearchResourceTypeIncidentEvents        DeleteSavedSearchResourceType = "incident_events"
)

func (e DeleteSavedSearchResourceType) ToPointer() *DeleteSavedSearchResourceType {
	return &e
}
func (e *DeleteSavedSearchResourceType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "change_events":
		fallthrough
	case "incidents":
		fallthrough
	case "services":
		fallthrough
	case "scheduled_maintenances":
		fallthrough
	case "ticket_tasks":
		fallthrough
	case "ticket_follow_ups":
		fallthrough
	case "analytics":
		fallthrough
	case "impact_analytics":
		fallthrough
	case "alerts":
		fallthrough
	case "incident_events":
		*e = DeleteSavedSearchResourceType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for DeleteSavedSearchResourceType: %v", v)
	}
}

type DeleteSavedSearchRequest struct {
	ResourceType  DeleteSavedSearchResourceType `pathParam:"style=simple,explode=false,name=resource_type"`
	SavedSearchID string                        `pathParam:"style=simple,explode=false,name=saved_search_id"`
}

func (d *DeleteSavedSearchRequest) GetResourceType() DeleteSavedSearchResourceType {
	if d == nil {
		return DeleteSavedSearchResourceType("")
	}
	return d.ResourceType
}

func (d *DeleteSavedSearchRequest) GetSavedSearchID() string {
	if d == nil {
		return ""
	}
	return d.SavedSearchID
}
