// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type GetIntegrationFieldMapAvailableFieldsRequest struct {
	FieldMapID string `pathParam:"style=simple,explode=false,name=field_map_id"`
}

func (o *GetIntegrationFieldMapAvailableFieldsRequest) GetFieldMapID() string {
	if o == nil {
		return ""
	}
	return o.FieldMapID
}

type GetIntegrationFieldMapAvailableFieldsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Get a description of the fields to which data can be mapped
	FieldMappingMappableFieldEntity *components.FieldMappingMappableFieldEntity
}

func (o *GetIntegrationFieldMapAvailableFieldsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetIntegrationFieldMapAvailableFieldsResponse) GetFieldMappingMappableFieldEntity() *components.FieldMappingMappableFieldEntity {
	if o == nil {
		return nil
	}
	return o.FieldMappingMappableFieldEntity
}
