// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"openapi/internal/utils"
	"openapi/models/components"
	"openapi/types"
)

type PathParamInfraType string

const (
	PathParamInfraTypeEnvironments    PathParamInfraType = "environments"
	PathParamInfraTypeFunctionalities PathParamInfraType = "functionalities"
	PathParamInfraTypeServices        PathParamInfraType = "services"
	PathParamInfraTypeCustomers       PathParamInfraType = "customers"
)

func (e PathParamInfraType) ToPointer() *PathParamInfraType {
	return &e
}
func (e *PathParamInfraType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "environments":
		fallthrough
	case "functionalities":
		fallthrough
	case "services":
		fallthrough
	case "customers":
		*e = PathParamInfraType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PathParamInfraType: %v", v)
	}
}

type GetV1MetricsInfraTypeInfraIDRequest struct {
	InfraType PathParamInfraType `pathParam:"style=simple,explode=false,name=infra_type"`
	// Component UUID
	InfraID string `pathParam:"style=simple,explode=false,name=infra_id"`
	// The start date to return metrics from; defaults to 30 days ago
	StartDate *types.Date `queryParam:"style=form,explode=true,name=start_date"`
	// The end date to return metrics from, defaults to today
	EndDate *types.Date `queryParam:"style=form,explode=true,name=end_date"`
}

func (g GetV1MetricsInfraTypeInfraIDRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetV1MetricsInfraTypeInfraIDRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GetV1MetricsInfraTypeInfraIDRequest) GetInfraType() PathParamInfraType {
	if o == nil {
		return PathParamInfraType("")
	}
	return o.InfraType
}

func (o *GetV1MetricsInfraTypeInfraIDRequest) GetInfraID() string {
	if o == nil {
		return ""
	}
	return o.InfraID
}

func (o *GetV1MetricsInfraTypeInfraIDRequest) GetStartDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.StartDate
}

func (o *GetV1MetricsInfraTypeInfraIDRequest) GetEndDate() *types.Date {
	if o == nil {
		return nil
	}
	return o.EndDate
}

type GetV1MetricsInfraTypeInfraIDResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Return metrics for a specific component
	MetricsInfrastructureMetricsEntity *components.MetricsInfrastructureMetricsEntity
}

func (o *GetV1MetricsInfraTypeInfraIDResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetV1MetricsInfraTypeInfraIDResponse) GetMetricsInfrastructureMetricsEntity() *components.MetricsInfrastructureMetricsEntity {
	if o == nil {
		return nil
	}
	return o.MetricsInfrastructureMetricsEntity
}
