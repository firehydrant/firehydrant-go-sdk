// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type GetV1IntegrationsConfluenceCloudConnectionsIDSpaceSearchRequest struct {
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// Space Key
	Keyword *string `queryParam:"style=form,explode=true,name=keyword"`
}

func (o *GetV1IntegrationsConfluenceCloudConnectionsIDSpaceSearchRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetV1IntegrationsConfluenceCloudConnectionsIDSpaceSearchRequest) GetKeyword() *string {
	if o == nil {
		return nil
	}
	return o.Keyword
}

type GetV1IntegrationsConfluenceCloudConnectionsIDSpaceSearchResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Lists available space keys for the Confluence integration connection.
	IntegrationsConfluenceCloudSpaceKeyEntity *components.IntegrationsConfluenceCloudSpaceKeyEntity
}

func (o *GetV1IntegrationsConfluenceCloudConnectionsIDSpaceSearchResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetV1IntegrationsConfluenceCloudConnectionsIDSpaceSearchResponse) GetIntegrationsConfluenceCloudSpaceKeyEntity() *components.IntegrationsConfluenceCloudSpaceKeyEntity {
	if o == nil {
		return nil
	}
	return o.IntegrationsConfluenceCloudSpaceKeyEntity
}
