// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"openapi/models/components"
)

type GetV1IncidentsIncidentIDTasksRequest struct {
	Page       *int   `queryParam:"style=form,explode=true,name=page"`
	PerPage    *int   `queryParam:"style=form,explode=true,name=per_page"`
	IncidentID string `pathParam:"style=simple,explode=false,name=incident_id"`
}

func (o *GetV1IncidentsIncidentIDTasksRequest) GetPage() *int {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *GetV1IncidentsIncidentIDTasksRequest) GetPerPage() *int {
	if o == nil {
		return nil
	}
	return o.PerPage
}

func (o *GetV1IncidentsIncidentIDTasksRequest) GetIncidentID() string {
	if o == nil {
		return ""
	}
	return o.IncidentID
}

type GetV1IncidentsIncidentIDTasksResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Retrieve a list of all tasks for a specific incident
	TaskEntityPaginated *components.TaskEntityPaginated
}

func (o *GetV1IncidentsIncidentIDTasksResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetV1IncidentsIncidentIDTasksResponse) GetTaskEntityPaginated() *components.TaskEntityPaginated {
	if o == nil {
		return nil
	}
	return o.TaskEntityPaginated
}
