// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"firehydrant/models/components"
)

type CreateStatusPageRequestBody struct {
	Domain             string  `json:"domain"`
	CompanyName        *string `json:"company_name,omitempty"`
	CompanyWebsite     *string `json:"company_website,omitempty"`
	CompanyTosURL      *string `json:"company_tos_url,omitempty"`
	GreetingTitle      *string `json:"greeting_title,omitempty"`
	GreetingBody       *string `json:"greeting_body,omitempty"`
	OperationalMessage *string `json:"operational_message,omitempty"`
	Title              *string `json:"title,omitempty"`
	// Status page condition to map your severity matrix condition to
	ConditionsNuncCondition []string `json:"conditions[nunc_condition]"`
	// Severity matrix condition id
	ConditionsConditionID        []string `json:"conditions[condition_id]"`
	ComponentsInfrastructureType []string `json:"components[infrastructure_type]"`
	ComponentsInfrastructureID   []string `json:"components[infrastructure_id]"`
	PrimaryColor                 *string  `json:"primary_color,omitempty"`
	SecondaryColor               *string  `json:"secondary_color,omitempty"`
	ExposedFields                []string `json:"exposed_fields,omitempty"`
	EnableHistogram              *bool    `json:"enable_histogram,omitempty"`
	UIVersion                    *int     `json:"ui_version,omitempty"`
}

func (o *CreateStatusPageRequestBody) GetDomain() string {
	if o == nil {
		return ""
	}
	return o.Domain
}

func (o *CreateStatusPageRequestBody) GetCompanyName() *string {
	if o == nil {
		return nil
	}
	return o.CompanyName
}

func (o *CreateStatusPageRequestBody) GetCompanyWebsite() *string {
	if o == nil {
		return nil
	}
	return o.CompanyWebsite
}

func (o *CreateStatusPageRequestBody) GetCompanyTosURL() *string {
	if o == nil {
		return nil
	}
	return o.CompanyTosURL
}

func (o *CreateStatusPageRequestBody) GetGreetingTitle() *string {
	if o == nil {
		return nil
	}
	return o.GreetingTitle
}

func (o *CreateStatusPageRequestBody) GetGreetingBody() *string {
	if o == nil {
		return nil
	}
	return o.GreetingBody
}

func (o *CreateStatusPageRequestBody) GetOperationalMessage() *string {
	if o == nil {
		return nil
	}
	return o.OperationalMessage
}

func (o *CreateStatusPageRequestBody) GetTitle() *string {
	if o == nil {
		return nil
	}
	return o.Title
}

func (o *CreateStatusPageRequestBody) GetConditionsNuncCondition() []string {
	if o == nil {
		return []string{}
	}
	return o.ConditionsNuncCondition
}

func (o *CreateStatusPageRequestBody) GetConditionsConditionID() []string {
	if o == nil {
		return []string{}
	}
	return o.ConditionsConditionID
}

func (o *CreateStatusPageRequestBody) GetComponentsInfrastructureType() []string {
	if o == nil {
		return []string{}
	}
	return o.ComponentsInfrastructureType
}

func (o *CreateStatusPageRequestBody) GetComponentsInfrastructureID() []string {
	if o == nil {
		return []string{}
	}
	return o.ComponentsInfrastructureID
}

func (o *CreateStatusPageRequestBody) GetPrimaryColor() *string {
	if o == nil {
		return nil
	}
	return o.PrimaryColor
}

func (o *CreateStatusPageRequestBody) GetSecondaryColor() *string {
	if o == nil {
		return nil
	}
	return o.SecondaryColor
}

func (o *CreateStatusPageRequestBody) GetExposedFields() []string {
	if o == nil {
		return nil
	}
	return o.ExposedFields
}

func (o *CreateStatusPageRequestBody) GetEnableHistogram() *bool {
	if o == nil {
		return nil
	}
	return o.EnableHistogram
}

func (o *CreateStatusPageRequestBody) GetUIVersion() *int {
	if o == nil {
		return nil
	}
	return o.UIVersion
}

type CreateStatusPageResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Create a new FireHydrant hosted status page for customer facing statuses.
	NuncConnectionEntity *components.NuncConnectionEntity
}

func (o *CreateStatusPageResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateStatusPageResponse) GetNuncConnectionEntity() *components.NuncConnectionEntity {
	if o == nil {
		return nil
	}
	return o.NuncConnectionEntity
}
