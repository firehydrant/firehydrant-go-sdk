// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

type UpdateAiPreferencesRequest struct {
	// Whether to enable AI features
	Ai *bool `json:"ai,omitempty"`
	// Whether to enable incident summaries
	Summaries *bool `json:"summaries,omitempty"`
	// Whether to enable incident descriptions
	Description *bool `json:"description,omitempty"`
	// Whether to enable incident impact
	Impact *bool `json:"impact,omitempty"`
	// Whether to enable incident updates
	Updates *bool `json:"updates,omitempty"`
	// Whether to enable incident retrospectives
	Retros *bool `json:"retros,omitempty"`
	// Whether to enable incident followups
	Followups *bool `json:"followups,omitempty"`
	// Whether to enable similar incidents
	SimilarIncidents *bool `json:"similar_incidents,omitempty"`
}

func (o *UpdateAiPreferencesRequest) GetAi() *bool {
	if o == nil {
		return nil
	}
	return o.Ai
}

func (o *UpdateAiPreferencesRequest) GetSummaries() *bool {
	if o == nil {
		return nil
	}
	return o.Summaries
}

func (o *UpdateAiPreferencesRequest) GetDescription() *bool {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *UpdateAiPreferencesRequest) GetImpact() *bool {
	if o == nil {
		return nil
	}
	return o.Impact
}

func (o *UpdateAiPreferencesRequest) GetUpdates() *bool {
	if o == nil {
		return nil
	}
	return o.Updates
}

func (o *UpdateAiPreferencesRequest) GetRetros() *bool {
	if o == nil {
		return nil
	}
	return o.Retros
}

func (o *UpdateAiPreferencesRequest) GetFollowups() *bool {
	if o == nil {
		return nil
	}
	return o.Followups
}

func (o *UpdateAiPreferencesRequest) GetSimilarIncidents() *bool {
	if o == nil {
		return nil
	}
	return o.SimilarIncidents
}
